{"version":3,"sources":["state/catalog/reducer.ts","state/transactions/reducer.ts","state/application/hooks.ts","theme/styles/mediaQueries.ts","components/Loader/index.tsx","mock/types.ts","pages/SingleItem/styleds.tsx","components/Button/index.tsx","utils/index.ts","state/catalog/hooks.ts","constants/navigation.ts","state/multicall/actions.ts","state/multicall/utils.ts","state/multicall/reducer.ts","state/global/actions.ts","state/index.ts","i18n.ts","blockchain/constants/chains.ts","shopify/graphql/ApolloProvider.tsx","assets/chains/network-mainnet-logo.svg","assets/chains/network-rinkeby-logo.svg","assets/chains/network-gnosis-chain-logo.svg","blockchain/constants/tokens.ts","blockchain/constants/addresses.ts","blockchain/utils/constructSameAddressMap.ts","blockchain/connectors/Fortmatic.ts","blockchain/connectors/NetworkConnector.ts","blockchain/connectors/index.ts","blockchain/constants/wallets.ts","blockchain/utils/getLibrary.ts","blockchain/hooks/index.ts","components/blockchain/Web3ReactManager/index.tsx","shopify/graphql/queries/products/index.ts","pages/App.tsx","hooks/useIsWindowVisible.ts","blockchain/utils/addNetwork.ts","blockchain/utils/switchToNetwork.ts","state/blockchain/hooks.ts","state/blockchain/updater.ts","hooks/useDebounce.ts","blockchain/utils/supportedChainId.ts","state/transactions/updater.tsx","state/user/updater.ts","state/catalog/updater.tsx","assets/fonts/Roboto/Roboto-Thin.ttf","assets/fonts/Roboto/Roboto-ThinItalic.ttf","assets/fonts/Roboto/Roboto-Light.ttf","assets/fonts/Roboto/Roboto-LightItalic.ttf","assets/fonts/Roboto/Roboto-Regular.ttf","assets/fonts/Roboto/Roboto-Italic.ttf","assets/fonts/Roboto/Roboto-Medium.ttf","assets/fonts/Roboto/Roboto-MediumItalic.ttf","assets/fonts/Roboto/Roboto-Bold.ttf","assets/fonts/Roboto/Roboto-BoldItalic.ttf","assets/fonts/Roboto/Roboto-Black.ttf","assets/fonts/Roboto/Roboto-BlackItalic.ttf","theme/styles/fonts.ts","theme/styles/global.tsx","serviceWorkerRegistration.ts","utils/node.ts","index.tsx","theme/styled.ts","utils/logging.ts","theme/components.tsx","theme/index.tsx","state/application/reducer.ts","state/user/hooks.ts","state/user/reducer.ts","constants/config.ts","state/blockchain/reducer.ts","components/Layout/Row.tsx","components/Layout/Column.tsx","components/Layout/Card.tsx","theme/styles/colours.ts","theme/utils.ts","shopify/graphql/queries/fragments.ts","shopify/graphql/queries/collections/index.ts","shopify/utils/index.ts","pages/Catalog/hooks.ts"],"names":["catalogSlice","createSlice","name","initialState","WINTER","SPRING","SUMMER","FALL","reducers","updateCatalog","state","payload","year","season","catalog","batchUpdateCatalogByYear","removeCatalogSeason","removeCatalogSeasonItem","itemKey","actions","reducer","HashType","now","Date","getTime","updateBlockNumber","tx","blockNumber","lastCheckedBlockNumber","Math","max","transactionsSlice","addTransaction","transactions","chainId","from","hash","hashType","approval","summary","presign","safeTransaction","data","console","warn","txs","transactionHash","ETHEREUM_TX","undefined","addedTime","clearAllTransactions","checkedTransaction","finalizeTransaction","receipt","confirmedTime","replaceTransaction","oldHash","newHash","type","allTxs","replacementType","error","updateSafeTransaction","safeTxHash","useModalOpen","modal","useAppSelector","application","openModal","useToggleModal","open","dispatch","useAppDispatch","useCallback","setOpenModal","useAddPopup","content","key","addPopup","useRemovePopup","removePopup","useFinalizeTransaction","useCheckedTransaction","useActivePopups","list","popupList","useMemo","filter","item","show","MEDIA_WIDTHS","upToExtraSmall","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","a","b","c","css","rotate","keyframes","StyledSVG","styled","svg","stroke","theme","primary1","FixedContainer","div","top","bottom","left","right","width","FixedAnimatedLoader","loadText","animation","animationDelay","styleParams","itemColor","Loader","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","SocialType","saturateAnimation","textShadowAnimation","fadeInAnimation","VideoContentWrapper","Row","hide","mediaWidth","ItemHeader","white","TYPE","maxWidth","ItemLogo","ItemSubHeader","black","attrs","props","fontSize","padding","fontWeight","fontStyle","useGradient","bgColor","transparentize","ItemBreadcrumb","NavLink","ItemDescription","InnerContainer","Column","STORE_IMAGE_SIZES","SMALL","ItemAsidePanel","ItemContainer","CATALOG_MAX_WIDTH","side","mobileView","ItalicStrikethrough","i","ItemCredits","children","_showSocialUrl","INSTAGRAM","DEVIANTART","DRIBBBLE","TIKTOK","BEHANCE","ItemArtistInfo","url","display","HighlightedText","href","style","alignItems","justifyContent","gap","PASTELLE_CREDIT","gradientBase","gradientEnd","rotation","height","color","VideoControlButton","Button","MobileItemCTA","span","darken","ButtonVariations","ButtonSizeVariations","BV","BSV","BUTTON_VARIATION_LIST","entries","DEFAULT_DARKEN_AMOUNT","PRIMARY_BUTTON_STYLES","text1","bg1","SECONDARY_BUTTON_STYLES","bg3","DANGER_BUTTON_STYLES","red1","red2","SUCCESS_BUTTON_STYLES","green1","green2","WARNING_BUTTON_STYLES","yellow1","yellow2","CANCEL_BUTTON_STYLES","text3","DISABLED_BUTTON_STYLES","textDisabled","bgDisabled","THEME_BUTTON_STYLES","ButtonThemeMap","accum","buttonStyle","buttonVariant","DEFAULT","PRIMARY","SECONDARY","DANGER","SUCCESS","WARNING","CANCEL","DISABLED","THEME","THEME_LIST","accum2","ButtonTheme","variants","BUTTON_THEME_KEY","ButtonSizes","buttons","font","normal","small","BIG","large","ButtonBase","button","border","borderRadius","ColouredButtonBase","ColouredAndSizedButtonBase","restProps","themeExtension","component","parser","UAParser","window","navigator","userAgent","getDevice","isMobile","getResult","useGetCurrentOnScreenItem","variables","DEFAULT_CURRENT_COLLECTION_VARIABLES","useCurrentCollectionProducts","productsMap","itemId","useOnScreenItemID","CATALOG_URL","CURRENT_YEAR","CURRENT_SEASON","addMulticallListeners","createAction","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","toCallKey","call","address","callData","gasRequired","Number","isSafeInteger","Error","multicall","createReducer","callResults","builder","addCase","calls","blocksPerFetch","options","listeners","callListeners","forEach","callKey","fetchingBlockNumber","current","results","updateVersion","useDispatch","useSelector","PERSISTED_KEYS","store","configureStore","blockchain","user","middleware","defaultMiddleware","thunk","concat","save","states","preloadedState","load","disableWarnings","process","i18next","use","XHR","LanguageDetector","initReactI18next","init","backend","loadPath","react","useSuspense","fallbackLng","preload","keySeparator","interpolation","escapeValue","SupportedChainId","link","createHttpLink","uri","headers","Accept","fetch","apolloClient","ApolloClient","cache","InMemoryCache","ApolloProvider","client","MAINNET","RINKEBY","XDAI","L1_CHAIN_IDS","CHAIN_INFO","docs","explorer","infoLink","label","logoUrl","EthereumLogo","nativeCurrency","symbol","decimals","RinkebyLogo","GnosisChainLogo","WXDAI","Token","WETH9","additionalNetworks","memo","constructSameAddressMap","CHAIN_ID_NETWORK_ARGUMENT","ChainId","FortmaticConnector","this","fortmatic","Fortmatic","default","apiKey","provider","getProvider","pollForOverlayReady","Promise","resolve","interval","setInterval","overlayReady","clearInterval","emit","all","enable","then","accounts","account","FortmaticConnectorCore","RequestError","message","code","MiniRpcProvider","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","devDebug","method","accept","body","JSON","stringify","map","request","response","reject","ok","json","byKey","id","result","sendAsync","callback","params","jsonrpc","catch","toString","promise","push","setTimeout","parsed","URL","pathname","NetworkConnector","urls","defaultChainId","invariant","length","supportedChainIds","k","providers","currentChainId","AbstractConnector","WALLET_CONNECT_BRIDGE","parseInt","chainIds","split","trim","includes","join","rpcNetworks","acc","otherChainIds","networkId","getRpcNetworks","NETWORK_CHAIN_ID","network","WalletProvider","injected","InjectedConnector","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","REACT_APP_FORTMATIC_KEY","portis","PortisConnector","dAppId","REACT_APP_PORTIS_ID","networks","walletlink","WalletLinkConnector","appName","appLogoUrl","STORAGE_KEY_LAST_PROVIDER","NetworkContextName","Set","getLibrary","library","Web3Provider","pollingInterval","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","useEagerConnect","activate","connector","useState","tried","setTried","handleBeforeUnload","walletType","INJECTED","WALLET_CONNECT","FORMATIC","PORTIS","WALLET_LINK","getProviderType","localStorage","setItem","removeItem","connectInjected","isAuthorized","ethereum","connectWalletConnect","useEffect","latestProvider","getItem","addEventListener","removeEventListener","MessageWrapper","Message","h2","secondary1","Web3ReactManager","useWeb3React","networkActive","networkError","activateNetwork","triedEager","suppress","on","handleChainChanged","handleAccountsChanged","removeListener","useInactiveListener","QUERY_PRODUCT","gql","FRAGMENT_PRODUCT_IMAGE","FRAGMENT_PRODUCT_VIDEO","Header","lazy","Popups","Catalog","AboutUs","NotFound","Navigation","SingleItem","RedirectPathToCatalogOnly","location","to","App","useQuery","amount","imageAmt","loading","fallback","exact","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","addNetwork","info","formattedChainId","hexStripZeros","BigNumber","toHexString","chainName","rpcUrls","blockExplorerUrls","switchToNetwork","getNetwork","useBlockNumber","DEFAULT_MS_BEFORE_WARNING","useBlockWarningTimer","currentBlock","chainConnectivityWarningActive","chainConnectivityWarning","setChainConnectivityWarning","useSetChainConnectivityWarning","msSinceLastBlock","setMsSinceLastBlock","timeout","useRef","waitMsBeforeWarning","blockWaitMsBeforeWarning","clearTimeout","Updater","updateChainId","useUpdateChainId","useUpdateBlockNumber","setImplements3085","useSetImplements3085","setState","windowVisible","blockNumberCallback","getBlockNumber","debouncedState","value","delay","debouncedValue","setDebouncedValue","handler","useDebounce","supportedChainId","x","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","contractAddress","status","transactionIndex","txn","success","useThemeManager","setMode","autoDarkHandler","match","autoTheme","matches","ThemeModes","DARK","LIGHT","matchMedia","autoDetect","useCollections","collectionAmount","productAmt","FontStyles","createGlobalStyle","Roboto100","Roboto100Italic","Roboto300","Roboto300Italic","Roboto400","Roboto400Italic","Roboto500","Roboto500Italic","Roboto700","Roboto700Italic","Roboto900","Roboto900Italic","TopGlobalStyle","getThemeColours","blue1","flickerAnimation","frameBgColor","ThemedGlobalStyle","setTextColour","setBgColour","headerLogo","navLogo","ThemedGlobalComponent","useAppColourTheme","currentItem","mode","CHAMELEON","showAnimation","Boolean","hostname","Node","prototype","originalRemoveChild","removeChild","child","parentNode","apply","arguments","originalInsertBefore","insertBefore","newNode","referenceNode","nodeRemoveChildFix","Web3ProviderNetwork","createWeb3ReactRoot","Updaters","caches","cacheName","devLog","delete","serviceWorker","getRegistrations","registrations","unregister","autoRefreshOnNetworkChange","ReactDOM","render","getElementById","ready","registration","deleteAllCaches","unregisterAllWorkers","StyledInternalLink","warning","backgroundColor","text4","X","disabled","text2","Link","StyledLink","rotateImg","img","ExternalLink","target","rel","handleClick","event","ctrlKey","metaKey","ReactGA","outboundLink","preventDefault","onClick","Spinner","TextWrapper","Text","main","largeHeader","mediumHeader","subHeader","blue","yellow","darkGray","gray","italic","DEFAULT_THEME","flexColumnNoWrap","flexRowNoWrap","ThemeProvider","themeObject","themeColours","shadow1","Children","childWithTheme","isValidElement","cloneElement","ApplicationModal","applicationSlice","action","removeAfterMs","popup","nanoid","p","updateThemeMode","setAutoDetect","updateThemeAutoDetect","useSetOnScreenItemID","setOnScreenItemID","onScreenItemID","userSlice","lastUpdateVersionTimestamp","getFullYear","LARGE","blockchainSlice","implements3085","Box","align","RowFixed","justify","AutoColumn","Card","bg2","primary5","DEFAULT_COLOURS","whiteDark","blueDark","purple","bgLight","bgDark","blackLight","successLight","successDark","dangerLight","dangerDark","warningLight","warningDark","disabledDarkOpaque","disabledDark","mainGradient","mainGradientDarker","LIGHT_COLOURS","text5","bg4","bg5","modalBG","advancedBG","primary2","primary3","primary4","primaryText1","secondary2","secondary3","DARK_COLOURS","VAMPIRE_COLOURS","CHAMELEON_COLOURS","colourTheme","THEME_COLOURS","VAMPIRE","themeColour","QUERY_GET_COLLECTION","getMetafields","query","test","str","parse","e","isJson","mapShopifyProductToProps","datum","brandingAssetsMap","brandingAssetMap","title","logo","header","navBar","description","descriptionHtml","artistInfo","images","nodes","slice","videos","media","__typename","sizes","values","useGetCatalogDetailsFromURL","useLocation","substring","collection","collections","products","prod","productsList","useCurrentCollectionProductsFromUrl","urlItem","currentProduct"],"mappings":"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","file":"static/js/main.0f01059e.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { CatalogItemsMap, CatalogSeason, CatalogSeasonItemMap, CatalogSeasonsMap } from 'mock/types'\n\nexport type CatalogState = CatalogItemsMap\n\nexport type BlockNumberState = {\n  chainId: number\n  blockNumber: number\n}\n\nconst initialState: CatalogState = {\n  '2022': {\n    WINTER: {},\n    SPRING: {},\n    SUMMER: {},\n    FALL: {}\n  }\n}\n\ntype UpdateCatalogParams = { year: number | string; catalog: CatalogSeasonsMap }\n\ntype UpdateCatalogBySeasonParams = { year: number | string; season: CatalogSeason; catalog: CatalogSeasonItemMap }\n\nconst catalogSlice = createSlice({\n  name: 'catalog',\n  initialState,\n  reducers: {\n    updateCatalog(state, { payload: { year, season, catalog } }: PayloadAction<UpdateCatalogBySeasonParams>) {\n      state[year][season] = catalog || {}\n    },\n    batchUpdateCatalogByYear(state, { payload: { year, catalog } }: PayloadAction<UpdateCatalogParams>) {\n      state[year] = { ...state[year], ...(catalog || {}) }\n    },\n    removeCatalogSeason(\n      state,\n      { payload: { year, season } }: PayloadAction<Omit<UpdateCatalogBySeasonParams, 'payload'>>\n    ) {\n      delete state[year][season]\n    },\n    removeCatalogSeasonItem(\n      state,\n      {\n        payload: { year, season, itemKey }\n      }: PayloadAction<Omit<UpdateCatalogBySeasonParams, 'payload'> & { itemKey: string }>\n    ) {\n      if (state[year]?.[season]?.[itemKey]) {\n        delete state[year][season]?.[itemKey]\n      }\n    }\n  }\n})\n\nexport const {\n  batchUpdateCatalogByYear,\n  updateCatalog,\n  removeCatalogSeason,\n  removeCatalogSeasonItem\n} = catalogSlice.actions\nexport const catalog = catalogSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { SafeMultisigTransactionResponse } from '@gnosis.pm/safe-service-client'\n\ntype WithChainId = { chainId: number }\ntype WithData = { data?: any }\ntype WithChainIdAndHash = WithChainId & { hash: string }\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport type ReplacementType = 'speedup' | 'cancel'\n\nexport type AddTransactionParams = WithChainId &\n  WithData &\n  Pick<TransactionDetails, 'hash' | 'hashType' | 'from' | 'approval' | 'presign' | 'summary' | 'safeTransaction'>\n\nexport enum HashType {\n  ETHEREUM_TX = 'ETHEREUM_TX',\n  GNOSIS_SAFE_TX = 'GNOSIS_SAFE_TX'\n}\n\nexport interface TransactionDetails {\n  hash: string // The hash of the transaction, normally Ethereum one, but not necessarily\n  hashType: HashType // Transaction hash: could be Ethereum tx, or for multisigs could be some kind of hash identifying the order (i.e. Gnosis Safe)\n  transactionHash?: string // Transaction hash. For EOA this field is immediately available, however, other wallets go through a process of offchain signing before the transactionHash is available\n\n  // Params using for polling handling\n  addedTime: number // Used to determine the polling frequency\n  lastCheckedBlockNumber?: number\n\n  // Basic data\n  from: string\n  summary?: string\n  confirmedTime?: number\n  receipt?: SerializableTransactionReceipt // Ethereum transaction receipt\n  data?: any // any attached data type\n\n  // Operations\n  approval?: { tokenAddress: string; spender: string }\n  presign?: { orderId: string }\n\n  // Wallet specific\n  safeTransaction?: SafeMultisigTransactionResponse // Gnosis Safe transaction info\n  replacementType?: ReplacementType // if the user cancelled or speedup the tx it will be reflected here\n}\n\nexport interface EnhancedTransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: EnhancedTransactionState = {}\n\nconst now = () => new Date().getTime()\n\nfunction updateBlockNumber(tx: TransactionDetails, blockNumber: number) {\n  if (!tx.lastCheckedBlockNumber) {\n    tx.lastCheckedBlockNumber = blockNumber\n  } else {\n    tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n  }\n}\n\nconst transactionsSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  reducers: {\n    addTransaction(\n      transactions,\n      {\n        payload: { chainId, from, hash, hashType, approval, summary, presign, safeTransaction, data }\n      }: PayloadAction<AddTransactionParams>\n    ) {\n      if (transactions[chainId]?.[hash]) {\n        console.warn('[state::enhancedTransactions] Attempted to add existing transaction', hash)\n        // Unknown transaction. Do nothing!\n        return\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = {\n        hash,\n        transactionHash: hashType === HashType.ETHEREUM_TX ? hash : undefined,\n        hashType,\n        addedTime: now(),\n        from,\n        summary,\n        data,\n\n        // Operations\n        approval,\n        presign,\n        safeTransaction\n      }\n      transactions[chainId] = txs\n    },\n    clearAllTransactions(transactions, { payload: chainId }: PayloadAction<number>) {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    },\n\n    checkedTransaction(\n      transactions,\n      { payload: { chainId, hash, blockNumber } }: PayloadAction<WithChainIdAndHash & { blockNumber: number }>\n    ) {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      updateBlockNumber(tx, blockNumber)\n    },\n\n    finalizeTransaction(\n      transactions,\n      {\n        payload: { hash, chainId, receipt }\n      }: PayloadAction<WithChainIdAndHash & { receipt: SerializableTransactionReceipt }>\n    ) {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    },\n\n    replaceTransaction(\n      transactions,\n      {\n        payload: { chainId, oldHash, newHash, type }\n      }: PayloadAction<WithChainId & { oldHash: string; newHash: string; type: ReplacementType }>\n    ) {\n      if (!transactions[chainId]?.[oldHash]) {\n        console.error('Attempted to replace an unknown transaction.')\n        return\n      }\n      const allTxs = transactions[chainId] ?? {}\n      allTxs[newHash] = {\n        ...allTxs[oldHash],\n        hash: newHash,\n        transactionHash: newHash,\n        addedTime: new Date().getTime(),\n        replacementType: type\n      }\n      delete allTxs[oldHash]\n    },\n\n    updateSafeTransaction(\n      transactions,\n      {\n        payload: { chainId, safeTransaction, blockNumber }\n      }: PayloadAction<WithChainId & { safeTransaction: SafeMultisigTransactionResponse; blockNumber: number }>\n    ) {\n      const { safeTxHash, transactionHash } = safeTransaction\n      const tx = transactions[chainId]?.[safeTxHash]\n      if (!tx) {\n        console.warn('[updateSafeTransaction] Unknown safe transaction', safeTxHash)\n        return\n      }\n\n      // Update block number\n      updateBlockNumber(tx, blockNumber)\n\n      // Update tx hash (if present)\n      tx.transactionHash = transactionHash\n\n      // Update safe info\n      tx.safeTransaction = safeTransaction\n    }\n  }\n})\n\nexport const {\n  addTransaction,\n  clearAllTransactions,\n  checkedTransaction,\n  finalizeTransaction,\n  replaceTransaction,\n  updateSafeTransaction\n} = transactionsSlice.actions\nexport const transactions = transactionsSlice.reducer\n","import { useCallback, useMemo } from 'react'\nimport { AppState, useAppSelector, useAppDispatch } from 'state'\nimport { checkedTransaction, finalizeTransaction } from '../transactions/reducer'\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal } from './reducer'\n\nexport function useModalOpen(modal: ApplicationModal): boolean {\n  const openModal = useAppSelector(state => state.application.openModal)\n  return openModal === modal\n}\n\nexport function useToggleModal(modal: ApplicationModal): () => void {\n  const open = useModalOpen(modal)\n  const dispatch = useAppDispatch()\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open])\n}\n\nexport function useOpenModal(modal: ApplicationModal): () => void {\n  const dispatch = useAppDispatch()\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal])\n}\n\nexport function useCloseModals(): () => void {\n  const dispatch = useAppDispatch()\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch])\n}\n\nexport function useWalletModalToggle(): () => void {\n  return useToggleModal(ApplicationModal.WALLET)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  return useToggleModal(ApplicationModal.SETTINGS)\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }))\n    },\n    [dispatch]\n  )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup() {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (payload: Parameters<typeof removePopup>[0]) => {\n      dispatch(removePopup(payload))\n    },\n    [dispatch]\n  )\n}\n\nexport function useFinalizeTransaction() {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (payload: Parameters<typeof finalizeTransaction>[0]) => {\n      dispatch(finalizeTransaction(payload))\n    },\n    [dispatch]\n  )\n}\n\nexport function useCheckedTransaction() {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (payload: Parameters<typeof checkedTransaction>[0]) => {\n      dispatch(checkedTransaction(payload))\n    },\n    [dispatch]\n  )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useAppSelector(state => state.application.popupList)\n  return useMemo(() => list.filter(item => item.show), [list])\n}\n","import { ThemedCssFunction, DefaultTheme, CSSObject, FlattenSimpleInterpolation, css } from 'styled-components/macro'\n\nexport const MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 720,\n  upToMedium: 960,\n  upToLarge: 1280\n}\n\ntype MediaWidthKeys = keyof typeof MEDIA_WIDTHS\n\ntype MediaWidth = {\n  [key in MediaWidthKeys]: ThemedCssFunction<DefaultTheme>\n}\n\nexport const mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce<MediaWidth>((accumulator, size: unknown) => {\n  ;(accumulator[size as MediaWidthKeys] as unknown) = (\n    a: CSSObject,\n    b: CSSObject,\n    c: CSSObject\n  ): ThemedCssFunction<DefaultTheme> | FlattenSimpleInterpolation => css`\n    @media (max-width: ${MEDIA_WIDTHS[size as MediaWidthKeys]}px) {\n      ${css(a, b, c)}\n    }\n  `\n  return accumulator\n}, {} as MediaWidth)\n","import { ReactNode } from 'react'\nimport { ItemHeader } from 'pages/SingleItem/styleds'\nimport styled, { keyframes } from 'styled-components/macro'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.primary1};\n  }\n`\n\ntype StyleParams = {\n  top?: string\n  right?: string\n  bottom?: string\n  left?: string\n  width?: string\n}\n\nconst FixedContainer = styled.div<StyleParams>`\n  position: fixed;\n  top: ${({ top = '25%' }) => top};\n  bottom: ${({ bottom = '25%' }) => bottom};\n  left: ${({ left = '25%' }) => left};\n  right: ${({ right = '25%' }) => right};\n  width: ${({ width = 'auto' }) => width};\n`\n\nexport const FixedAnimatedLoader = ({\n  loadText,\n  animation = true,\n  animationDelay = false,\n  ...styleParams\n}: { loadText: ReactNode; animation?: boolean; animationDelay?: boolean } & StyleParams) => (\n  <FixedContainer {...styleParams}>\n    <ItemHeader itemColor=\"#FFBEBC\" animation={animation} animationDelay={animationDelay}>\n      {loadText}\n    </ItemHeader>\n  </FixedContainer>\n)\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { ProductPageProps, ItemPageDesignsProps } from 'pages/SingleItem/AsideWithVideo'\n\nexport enum SocialType {\n  INSTAGRAM = 'INSTAGRAM',\n  TIKTOK = 'TIKTOK',\n  DEVIANTART = 'DEVIANTART',\n  DRIBBBLE = 'DRIBBBLE',\n  BEHANCE = 'BEHANCE'\n}\n\nexport type ApparelItem = {\n  imageMedia: {\n    path: string\n    large: string | number\n    small: string | number\n  }\n  videoMedia: {\n    path: string\n    lowq: string\n  }\n}\nexport type CatalogSeason = 'WINTER' | 'SPRING' | 'SUMMER' | 'FALL'\nexport type CatalogItem = ProductPageProps & ItemPageDesignsProps\n// returns { ITEM_NAME: ITEM_OBJECT }\nexport type CatalogSeasonItemMap = {\n  [item: string]: CatalogItem\n}\n// returns { SEASON_NAME: MAP_OF_ITEMS }\nexport type CatalogSeasonsMap = {\n  [key in CatalogSeason]: CatalogSeasonItemMap | undefined\n}\nexport type CatalogItemsMap = {\n  [year: string]: Partial<CatalogSeasonsMap>\n}\nexport type BaseCatalogItem = {\n  year: number | string\n  season: CatalogSeason\n  name: string\n  color: string\n}\n\nexport type CollaboratorSocialData = { type: SocialType; url: string; display: string }[]\n\nexport type ItemSizes = 'XX-LARGE' | 'X-LARGE' | 'LARGE' | 'MEDIUM' | 'SMALL'\nexport type ItemMetadata = BaseCatalogItem & {\n  description: string[]\n  collaborator?: string\n  social?: CollaboratorSocialData\n}\nexport type ItemMetaDataOptions = { reverseMediaOrder?: boolean; imageExtension?: string }\n\nexport type ItemMediaContent = {\n  logo?: string\n  images: {\n    front: string\n    back: string\n  }\n  videos: {\n    front: string\n    back: string\n  }\n}\n","import { TFC } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled, { css } from 'styled-components/macro'\nimport { darken, transparentize } from 'polished'\n\nimport { Column, Row } from 'components/Layout'\nimport { ProductPageProps } from './AsideWithVideo'\nimport { ExternalLink, TYPE } from 'theme'\nimport { Dribbble, Instagram } from 'react-feather'\nimport Button from 'components/Button'\nimport { SocialType } from 'mock/types'\nimport { STORE_IMAGE_SIZES, CATALOG_MAX_WIDTH } from 'constants/config'\nimport { MEDIA_WIDTHS } from 'theme/styles/mediaQueries'\n\nconst saturateAnimation = css`\n  @keyframes saturate {\n    0% {\n      filter: contrast(1.8) saturate(20) blur(5px);\n    }\n    10% {\n      filter: contrast(1.8) saturate(1) blur(0.8px);\n    }\n  }\n`\n\nconst textShadowAnimation = css<{ itemColor: string }>`\n  @keyframes textShadowAnimation {\n    0% {\n      text-shadow: 20px 2px 2px ${({ itemColor }) => itemColor};\n      letter-spacing: 20px;\n    }\n    3% {\n      text-shadow: 55px 2px 8px ${({ itemColor }) => itemColor};\n    }\n    5% {\n      text-shadow: -22px 2px 2px pink;\n    }\n    7% {\n      text-shadow: 47px 2px 8px ${({ itemColor }) => itemColor};\n    }\n    10% {\n      text-shadow: 17px 2px 8px ${({ itemColor }) => itemColor};\n    }\n    47% {\n      text-shadow: 10px 2px 2px ${({ itemColor }) => itemColor};\n      letter-spacing: 7px;\n    }\n    48% {\n      text-shadow: -20px 2px 1px pink;\n    }\n    49% {\n      text-shadow: 20px 2px 2px ${({ itemColor }) => itemColor};\n    }\n    53% {\n      text-shadow: 55px 2px 8px ${({ itemColor }) => itemColor};\n    }\n    55% {\n      text-shadow: -32px 2px 2px purple;\n    }\n    57% {\n      text-shadow: 47px 2px 7px lightgreen;\n    }\n    58% {\n      text-shadow: -47px 2px 1px ${({ itemColor }) => itemColor};\n    }\n    60% {\n      text-shadow: 20px 2px 2px ${({ itemColor }) => itemColor};\n    }\n    65% {\n      text-shadow: 20px 2px 5px purple;\n    }\n  }\n`\n\nexport const fadeInAnimation = css`\n  @keyframes fadeIn {\n    0% {\n      filter: contrast(0) blur(100px);\n    }\n    100% {\n      filter: contrast(1) blur(0px);\n    }\n  }\n`\n\nexport const VideoContentWrapper = styled(Row)<{ hide?: boolean }>`\n  z-index: -1;\n\n  opacity: 1;\n  ${({ hide }) => hide && `opacity: 0;`}\n  transition: opacity 0.8s ease-in-out;\n\n  video {\n    // lock the video to 16:9 ratio\n    // height: calc(100vw * (9 / 16));\n    height: 100%;\n\n    filter: contrast(1) saturate(1) blur(0px);\n\n    ${saturateAnimation};\n\n    animation-name: saturate;\n    animation-duration: 10.4s;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n      display: none;\n    `}\n  }\n`\nexport const Strikethrough = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.white};\n  height: 5px;\n`\nexport type ItemHeaderProps = { animation?: boolean; animationDelay?: boolean; itemColor: string; maxWidth?: string }\nexport const ItemHeader = styled(TYPE.white)<ItemHeaderProps>`\n  z-index: 100;\n  font-style: italic;\n  letter-spacing: 7px;\n  font-size: 100px;  \n\n  // logo\n  > img {\n    max-width: ${({ maxWidth = '100%' }) => maxWidth};\n  }\n  \n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 65px;\n  `}\n\n  ${({ animation = false }) => animation && textShadowAnimation}\n  ${({ animation = false, animationDelay = true, itemColor }) =>\n    animation &&\n    `\n      text-shadow: 10px 2px 2px ${itemColor};\n      animation-name: textShadowAnimation;\n      animation-duration: 10s;\n      animation-iteration-count: 3;\n      ${animationDelay && 'animation-delay: 1s;'}\n    `}\n`\n\nexport const ItemLogo = styled.div<{ mobileView?: boolean; maxWidth?: string }>`\n  > img {\n    max-width: ${({ maxWidth = '100%' }) => maxWidth};\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    margin-top: -35px;  \n  `}\n\n  z-index: 100;\n`\n\nexport const ItemSubHeader = styled(TYPE.black).attrs(props => ({\n  fontSize: 16,\n  padding: 2,\n  fontWeight: 500,\n  fontStyle: 'italic',\n  ...props\n}))<{ bgColor?: string; useGradient?: boolean }>`\n  background: ${({ useGradient = false, bgColor = 'transparent' }) =>\n    useGradient\n      ? `linear-gradient(15deg, ${bgColor} 0%, ${transparentize(1, bgColor)} 35%, transparent 70%)`\n      : bgColor};\n  width: 100%;\n`\n\nexport const ItemBreadcrumb = styled(NavLink)`\n  color: ${({ theme }) => theme.black};\n  font-size: 10px;\n  font-weight: 300;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  > span:first-child {\n    margin: 0 5px;\n  }\n`\nexport const ItemDescription = styled(TYPE.black).attrs({ fontSize: 18, padding: 2, fontWeight: 400 })`\n  text-transform: uppercase;\n  font-style: italic;\n\n  .item-description-p:first-child {\n    margin-top: 0;\n  }\n`\n\nexport const InnerContainer = styled(Column)<{ bgColor?: string }>`\n  width: 100%;\n  max-width: ${STORE_IMAGE_SIZES.SMALL}px;\n\n  background: ${({ theme, bgColor }) => (bgColor ? transparentize(0.62, bgColor) : transparentize(0.35, theme.white))};\n`\n\nexport const ItemAsidePanel = styled(Column)`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: flex-start;\n`\n\nexport const ItemContainer = styled(Row)<{ side?: 'LEFT' | 'RIGHT'; mobileView?: boolean; bgColor?: string }>`\n  width: 100%;\n  max-width: ${CATALOG_MAX_WIDTH}px;\n  height: 100%;\n  justify-content: center;\n  align-items: stretch;\n\n  position: relative;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    justify-content: stretch;\n  `}\n\n  > ${ItemAsidePanel} {\n    overflow-y: auto;\n    position: relative;\n    justify-content: ${({ side = 'LEFT' }) => (side === 'LEFT' ? 'flex-start' : 'flex-end')};\n    \n    height: 100%;\n    width: 100%;\n\n    > ${InnerContainer} {\n      position: relative;\n      background: ${({ theme }) => transparentize(0.35, theme.white)};\n\n      ${({ theme }) => theme.mediaWidth.upToSmall`\n        max-width: 100%;\n      `}\n\n      > ${ItemLogo} {\n        margin-top: ${({ mobileView = false }) => (mobileView ? '0' : '-35px')};\n      }\n\n      ${({ mobileView }) =>\n        mobileView &&\n        `\n        min-height: 100%;\n\n        ${ItemLogo} {\n          position: fixed;\n          max-width ${STORE_IMAGE_SIZES.SMALL}px;\n          bottom: -55px;\n          left: 0; right: 0;\n\n          @media only screen and (max-width: ${MEDIA_WIDTHS.upToSmall}) {\n            position: absolute;\n            max-width: 100%;\n          } \n        `}\n      }\n    }\n\n    z-index: 2;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n      border: none;\n      margin: 0;\n  `}\n  }\n\n  > ${VideoContentWrapper} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  select {\n    min-width: 15ch;\n    max-width: 100%;\n    border: 1px solid var(--select-border);\n    border-radius: 0.25em;\n    padding: 0.25em 0.5em;\n    margin: 0 5px;\n    font-size: 1.25rem;\n    cursor: pointer;\n    line-height: 1.1;\n    background-color: #fff;\n    background-image: linear-gradient(to top, #f9f9f9, #fff 33%);\n\n    display: grid;\n    grid-template-areas: 'select';\n    align-items: center;\n\n    &:after {\n      content: '';\n      width: 0.8em;\n      height: 0.5em;\n      background-color: #777;\n      clip-path: polygon(100% 0%, 0 0%, 50% 100%);\n\n      justify-self: end;\n    }\n\n    select,\n    .select:after {\n      grid-area: select;\n    }\n  }\n`\n\nexport const ItalicStrikethrough = styled.i`\n  text-decoration: line-through;\n`\n\nexport const ItemCredits: TFC = ({ children }) => (\n  <TYPE.black fontSize={14} padding=\"13px 8px\" fontWeight={300} width=\"100%\">\n    {children}\n  </TYPE.black>\n)\n\nfunction _showSocialUrl(type: string | SocialType) {\n  switch (type) {\n    case SocialType.INSTAGRAM:\n      return <Instagram />\n    case SocialType.DEVIANTART:\n      return <Instagram />\n    case SocialType.DRIBBBLE:\n      return <Dribbble />\n    case SocialType.TIKTOK:\n      return <Instagram />\n    case SocialType.BEHANCE:\n      return <Instagram />\n    default:\n      return null\n  }\n}\n\nexport const ItemArtistInfo = (props: (ProductPageProps['artistInfo'] & { bgColor: string }) | undefined) => {\n  if (!props) return null\n\n  const { name, type, url, display, bgColor } = props\n\n  return (\n    <TYPE.black fontSize={14} padding={2} fontWeight={300}>\n      <HighlightedText bgColor={bgColor}>\n        <ItalicStrikethrough>PASTELLE</ItalicStrikethrough> x {name}\n      </HighlightedText>\n      <br />\n      <br />\n      <ExternalLink\n        key={url}\n        href={url}\n        style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', gap: 5 }}\n      >\n        {_showSocialUrl(type)} {display}\n      </ExternalLink>\n    </TYPE.black>\n  )\n}\ntype FloatingColoredBlock = {\n  width?: number\n  height?: number\n  top?: number\n  left?: number\n  gradientBase?: string\n  gradientEnd?: string\n  rotation?: number\n}\n\nexport const FloatingBlockContainer = styled.div<FloatingColoredBlock>`\n  position: absolute;\n  background-image: ${({ gradientBase = 'rgba(33, 114, 229, 0.1)', gradientEnd = 'rgba(33, 36, 41, 1)' }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${gradientBase} 0%, ${gradientEnd} 100%)`};\n\n  transform: rotate(${({ rotation = 45 }) => rotation}deg);\n\n  width: ${({ width = 755 }) => width}px;\n  height: ${({ height = 292 }) => height}px;\n  top: ${({ top = 57 }) => top}px;\n  left: ${({ left = -106 }) => left}px;\n\n  z-index: -1;\n`\n\nconst FloatingColouredBlock = styled.div<{ color: string }>`\n  height: 100%;\n  width: 100%;\n  background: ${({ color }) => color};\n`\n\nexport const FloatingStrip = ({ color, ...rest }: FloatingColoredBlock & { color: string }) => (\n  <FloatingBlockContainer {...rest}>\n    <FloatingColouredBlock color={color} />\n  </FloatingBlockContainer>\n)\n\nexport const BreadcrumbWrapper = styled(ItemSubHeader)`\n  display: flex;\n  gap: 5px;\n  margin-bottom: -24px;\n  z-index: 100;\n  padding-top: 4px;\n  font-size: 12px;\n`\n\nexport const PASTELLE_CREDIT = (\n  <>\n    Homegrown at <ItalicStrikethrough>PASTELLE</ItalicStrikethrough> labs\n  </>\n)\n\nexport const VideoControlButton = styled(Button)`\n  cursor: pointer;\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 10;\n  border-radius: 0 0 0 10px;\n  z-index: 950;\n\n  > ${ItemSubHeader} {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-evenly;\n    align-items: center;\n    gap: 5px;\n    color: ${({ theme }) => theme.black};\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n      display: none;\n  `}\n`\n\nexport const MobileItemCTA = styled(Row)`\n  display: none;\n  position: fixed;\n  top: 0;\n  right: 0;\n  height: 60px;\n  background-color: lavender;\n  font-size: 40px;\n  font-weight: 100;\n  width: calc(100% - 600px);\n  color: #000;\n  letter-spacing: -3.5;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n      width: 100%;\n      display: block;\n  `}\n`\n\nexport const HighlightedText = styled.span<{ color?: string; bgColor: string }>`\n  color: ${({ theme, color = theme.white }) => color};\n  background-color: ${({ bgColor }) => darken(0.3, bgColor)};\n  padding: 5px 10px;\n  line-height: 1.8;\n`\n","import styled, { css, FlattenInterpolation, ThemeProps, DefaultTheme } from 'styled-components/macro'\nimport { variants } from 'styled-theming'\nimport ThemeProvider from 'theme'\n\nimport { darken } from 'polished'\nimport { THEME_LIST, ThemeModes } from 'theme/styled'\n\nexport type Writable<T> = {\n  -readonly [K in keyof T]: T[K]\n}\n\nexport interface ButtonBaseProps extends React.ButtonHTMLAttributes<Element> {\n  variant?: ButtonVariations\n  size?: ButtonSizeVariations\n}\n\nexport enum ButtonVariations {\n  DEFAULT = 'DEFAULT',\n  PRIMARY = 'PRIMARY',\n  SECONDARY = 'SECONDARY',\n  DANGER = 'DANGER',\n  SUCCESS = 'SUCCESS',\n  WARNING = 'WARNING',\n  CANCEL = 'CANCEL',\n  DISABLED = 'DISABLED',\n  THEME = 'THEME'\n}\n\nexport enum ButtonSizeVariations {\n  DEFAULT = 'DEFAULT',\n  SMALL = 'SMALL',\n  BIG = 'BIG'\n}\n\n// Aliases\nexport const BV = ButtonVariations\nexport const BSV = ButtonSizeVariations\n\nconst BUTTON_VARIATION_LIST = Object.entries(ButtonVariations)\n\nconst DEFAULT_DARKEN_AMOUNT = 0.2\n\nconst PRIMARY_BUTTON_STYLES = css`\n  color: ${({ theme }): string => theme.text1};\n  background: ${({ theme }): string => theme.bg1};\n\n  &:hover {\n    background: ${({ theme }): string => darken(DEFAULT_DARKEN_AMOUNT, theme.bg1)};\n  }\n`\n\nconst SECONDARY_BUTTON_STYLES = css`\n  color: ${({ theme }): string => theme.text1};\n  background: ${({ theme }): string => theme.bg3};\n\n  &:hover {\n    background: ${({ theme }): string => darken(DEFAULT_DARKEN_AMOUNT, theme.bg3)};\n  }\n`\n\nconst DANGER_BUTTON_STYLES = css`\n  color: ${({ theme }): string => theme.red1};\n  background: ${({ theme }): string => theme.red2};\n\n  &:hover {\n    background: ${({ theme }): string => darken(DEFAULT_DARKEN_AMOUNT, theme.red2)};\n    border-color: ${({ theme }): string => theme.red1};\n  }\n`\n\nconst SUCCESS_BUTTON_STYLES = css`\n  color: ${({ theme }): string => theme.green1};\n  background: ${({ theme }): string => theme.green2};\n\n  &:hover {\n    background: ${({ theme }): string => darken(DEFAULT_DARKEN_AMOUNT, theme.green2)};\n    border-color: ${({ theme }): string => theme.green1};\n  }\n`\n\nconst WARNING_BUTTON_STYLES = css`\n  color: ${({ theme }): string => theme.yellow1};\n  background: ${({ theme }): string => theme.yellow2};\n\n  &:hover {\n    background: ${({ theme }): string => darken(DEFAULT_DARKEN_AMOUNT, theme.yellow2)};\n    border-color: ${({ theme }): string => theme.yellow1};\n  }\n`\n\nconst CANCEL_BUTTON_STYLES = css`\n  color: ${({ theme }): string => theme.text3};\n  background: ${({ theme }): string => theme.bg1};\n\n  &:hover {\n    background: ${({ theme }): string => darken(DEFAULT_DARKEN_AMOUNT, theme.bg1)};\n    border-color: ${({ theme }): string => theme.text3};\n  }\n`\n\nconst DISABLED_BUTTON_STYLES = css`\n  color: ${({ theme }): string => theme.textDisabled};\n  background: ${({ theme }): string => theme.bgDisabled};\n\n  &:hover {\n    background: ${({ theme }): string => darken(DEFAULT_DARKEN_AMOUNT, theme.bgDisabled)};\n    border-color: ${({ theme }): string => theme.textDisabled};\n  }\n`\n\nconst THEME_BUTTON_STYLES = css`\n  color: ${({ theme }): string => theme.text1};\n  background: ${({ theme }): string => theme.bg1};\n\n  &:hover {\n    background: ${({ theme }): string => darken(DEFAULT_DARKEN_AMOUNT, theme.bg1)};\n    border-color: ${({ theme }): string => theme.text1};\n  }\n`\n\ntype ButtonVariationInterpolationObject = {\n  [key in keyof typeof ButtonVariations]: ThemeInterpolationObject\n}\n\ntype ThemeInterpolationObject = { [key in keyof typeof ThemeModes]: FlattenInterpolation<ThemeProps<DefaultTheme>> }\n\nconst ButtonThemeMap: Writable<ButtonVariationInterpolationObject> = BUTTON_VARIATION_LIST.reduce(\n  (accum, [, buttonVariant]) => {\n    // buttonStyle = 'secondary' or 'primary' etc style\n    let buttonStyle: FlattenInterpolation<ThemeProps<DefaultTheme>>\n\n    switch (buttonVariant) {\n      case ButtonVariations.DEFAULT:\n        buttonStyle = PRIMARY_BUTTON_STYLES\n        break\n      case ButtonVariations.PRIMARY:\n        buttonStyle = PRIMARY_BUTTON_STYLES\n        break\n      case ButtonVariations.SECONDARY:\n        buttonStyle = SECONDARY_BUTTON_STYLES\n        break\n      case ButtonVariations.DANGER:\n        buttonStyle = DANGER_BUTTON_STYLES\n        break\n      case ButtonVariations.SUCCESS:\n        buttonStyle = SUCCESS_BUTTON_STYLES\n        break\n      case ButtonVariations.WARNING:\n        buttonStyle = WARNING_BUTTON_STYLES\n        break\n      case ButtonVariations.CANCEL:\n        buttonStyle = CANCEL_BUTTON_STYLES\n        break\n      case ButtonVariations.DISABLED:\n        buttonStyle = DISABLED_BUTTON_STYLES\n        break\n      case ButtonVariations.THEME:\n        buttonStyle = THEME_BUTTON_STYLES\n        break\n    }\n\n    accum[buttonVariant] = THEME_LIST.reduce<Writable<ThemeInterpolationObject>>((accum2, [, themeName]) => {\n      // { 'LIGHT': css` ... `, 'DARK': css` ... `, ... }\n      accum2[themeName] = buttonStyle\n      return accum2\n    }, {} as ThemeInterpolationObject)\n\n    return accum\n  },\n  {} as Writable<ButtonVariationInterpolationObject>\n)\n\nexport const ButtonTheme = variants('mode', 'variant', ButtonThemeMap)\n\n// name of the key we will look for on our theme object\n// used to target buttons\nconst BUTTON_THEME_KEY = 'button'\n// Created a 'size' prop on buttons, default | small | big\nconst ButtonSizes = variants('component', 'size', {\n  DEFAULT: {\n    [BUTTON_THEME_KEY]: css`\n      font-size: ${({ theme }) => theme.buttons.font.size.normal};\n      padding: 0.5rem 1rem;\n    `\n  },\n  SMALL: {\n    [BUTTON_THEME_KEY]: css`\n      font-size: ${({ theme }) => theme.buttons.font.size.small};\n      padding: 0.3rem 1rem;\n    `\n  },\n  BIG: {\n    [BUTTON_THEME_KEY]: css`\n      font-size: ${({ theme }) => theme.buttons.font.size.large};\n      padding: 0.65rem 1.2rem;\n    `\n  }\n})\n\nconst ButtonBase = styled.button`\n  border: ${({ theme }) => theme.buttons.border};\n  border-radius: ${({ theme }) => theme.buttons.borderRadius};\n  cursor: pointer;\n  font-size: ${({ theme }) => theme.buttons.font.size.normal};\n  font-weight: 600;\n  outline: 0;\n\n  transition-duration: 0.2;\n  transition-timing-function: ease-in-out;\n  transition-property: color, background, border-color, opacity, margin;\n\n  &:disabled,\n  &[disabled] {\n    pointer-events: none;\n  }\n`\n\nconst ColouredButtonBase = styled(ButtonBase)`\n  /* Fold in theme css above */\n  ${ButtonTheme}\n`\n\nconst ColouredAndSizedButtonBase = styled(ColouredButtonBase)`\n  /* Fold in theme css above */\n  ${ButtonSizes}\n`\n\n// Wrap ColouredAndSizedButtonsBase in it's own ThemeProvider which takes the toplevel app theme\n// ThemeProvider and interpolate over it's props\nconst ThemeWrappedButtonBase: React.FC<React.ButtonHTMLAttributes<Element>> = ({ children, ...restProps }) => (\n  <ThemeProvider themeExtension={{ component: BUTTON_THEME_KEY }}>\n    <ColouredAndSizedButtonBase {...restProps}>{children}</ColouredAndSizedButtonBase>\n  </ThemeProvider>\n)\n\nexport default styled(ThemeWrappedButtonBase).attrs<ButtonBaseProps>(({ size = BSV.DEFAULT }) => ({\n  size\n}))<ButtonBaseProps>``\n","import { UAParser } from 'ua-parser-js'\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nconst parser = new UAParser(window.navigator.userAgent)\nconst { type } = parser.getDevice()\n\nexport const userAgent = parser.getResult()\n\nexport const isMobile = type === 'mobile' || type === 'tablet'\n\nexport const isTruthy = <T>(value: T | null | undefined | false): value is T => !!value\n\nexport const delay = <T = void>(ms = 100, result?: T): Promise<T> =>\n  new Promise(resolve => setTimeout(resolve, ms, result))\n\nexport function withTimeout<T>(promise: Promise<T>, ms: number, context?: string): Promise<T> {\n  const failOnTimeout = delay(ms).then(() => {\n    const errorMessage = 'Timeout after ' + ms + ' ms'\n    throw new Error(context ? `${context}. ${errorMessage}` : errorMessage)\n  })\n\n  return Promise.race([promise, failOnTimeout])\n}\n\nexport function isPromiseFulfilled<T>(\n  promiseResult: PromiseSettledResult<T>\n): promiseResult is PromiseFulfilledResult<T> {\n  return promiseResult.status === 'fulfilled'\n}\n\n// To properly handle PromiseSettleResult which returns and object\nexport function getPromiseFulfilledValue<T, E = undefined>(\n  promiseResult: PromiseSettledResult<T>,\n  nonFulfilledReturn: E\n) {\n  return isPromiseFulfilled(promiseResult) ? promiseResult.value : nonFulfilledReturn\n}\n\nexport const registerOnWindow = (registerMapping: Record<string, any>) => {\n  Object.entries(registerMapping).forEach(([key, value]) => {\n    ;(window as any)[key] = value\n  })\n}\n\n/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n\n// shitty array \"randomiser\"\nexport function randomiseArray(arr: any[]) {\n  const randomIndex = Math.round(Math.random() * arr.length)\n\n  // 0 index, return original arr\n  if (!randomIndex) return arr\n\n  const adjustedArrEnd = arr.slice(randomIndex)\n  const adjustedArrBeg = arr.slice(0, randomIndex - 1)\n  const newFirstItem = arr[randomIndex - 1]\n\n  return [newFirstItem, ...adjustedArrBeg, ...adjustedArrEnd]\n}\n","import { useCallback } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state'\nimport { batchUpdateCatalogByYear, updateCatalog } from './reducer'\nimport { CatalogSeason, CatalogSeasonItemMap, CatalogSeasonsMap } from 'mock/types'\nimport { useOnScreenItemID } from 'state/user/hooks'\nimport { DEFAULT_CURRENT_COLLECTION_VARIABLES, useCurrentCollectionProducts } from 'pages/Catalog/hooks'\nimport { GetCollectionQueryVariables } from 'shopify/graphql/types'\n\nexport function useCatalog() {\n  return useAppSelector(state => state.catalog)\n}\n\nexport function useCatalogByYear(year: string | number) {\n  return useAppSelector(state => state.catalog[year])\n}\n\ntype CatalogByYearAndSeasonParams = {\n  year: string | number\n  season: CatalogSeason\n}\n\nexport function useCatalogByYearAndSeason({ year, season }: CatalogByYearAndSeasonParams) {\n  return useAppSelector(state => state.catalog[year][season])\n}\n\nexport function useUpdateCatalog() {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (params: { year: string | number; season: CatalogSeason; catalog: CatalogSeasonItemMap }) =>\n      dispatch(updateCatalog(params)),\n    [dispatch]\n  )\n}\n\nexport function useBatchUpdateCatalogByYear() {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (params: { year: string | number; catalog: CatalogSeasonsMap }) => dispatch(batchUpdateCatalogByYear(params)),\n    [dispatch]\n  )\n}\n\nexport function useGetCurrentOnScreenItem(\n  variables: GetCollectionQueryVariables = DEFAULT_CURRENT_COLLECTION_VARIABLES\n) {\n  const { productsMap } = useCurrentCollectionProducts(variables)\n  const itemId = useOnScreenItemID()\n\n  return itemId ? productsMap?.[itemId] : undefined\n}\n","import { CURRENT_SEASON, CURRENT_YEAR } from 'constants/config'\n\nexport const CATALOG_URL = '/goods/' + CURRENT_YEAR + '/' + CURRENT_SEASON\n","import { createAction } from '@reduxjs/toolkit'\nimport { Call } from './utils'\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options: ListenerOptions }>(\n  'multicall/addMulticallListeners'\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options: ListenerOptions }>(\n  'multicall/removeMulticallListeners'\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults'\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","export interface Call {\n  address: string\n  callData: string\n  gasRequired?: number\n}\n\nexport function toCallKey(call: Call): string {\n  let key = `${call.address}-${call.callData}`\n  if (call.gasRequired) {\n    if (!Number.isSafeInteger(call.gasRequired)) {\n      throw new Error(`Invalid number: ${call.gasRequired}`)\n    }\n    key += `-${call.gasRequired}`\n  }\n  return key\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (![2, 3].includes(pcs.length)) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n    ...(pcs[2] ? { gasRequired: Number.parseInt(pcs[2]) } : {})\n  }\n}\n","import { createReducer } from '@reduxjs/toolkit'\n\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  updateMulticallResults\n} from './actions'\nimport { toCallKey } from './utils'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {}\n}\n\nexport const multicall = createReducer(initialState, builder =>\n  builder\n    .addCase(\n      addMulticallListeners,\n      (\n        state,\n        {\n          payload: {\n            calls,\n            chainId,\n            options: { blocksPerFetch }\n          }\n        }\n      ) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n        listeners[chainId] = listeners[chainId] ?? {}\n        calls.forEach(call => {\n          const callKey = toCallKey(call)\n          listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n          listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n        })\n      }\n    )\n    .addCase(\n      removeMulticallListeners,\n      (\n        state,\n        {\n          payload: {\n            chainId,\n            calls,\n            options: { blocksPerFetch }\n          }\n        }\n      ) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach(call => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      }\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current || typeof current.fetchingBlockNumber !== 'number') return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber <= fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach(callKey => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber\n        }\n      })\n    })\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n","import { configureStore } from '@reduxjs/toolkit'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport { save, load } from 'redux-localstorage-simple'\n\nimport { user } from 'state/user/reducer'\nimport { application } from 'state/application/reducer'\n// APPAREL\nimport { catalog } from 'state/catalog/reducer'\n// BLOCKCHAIN\nimport { blockchain } from 'state/blockchain/reducer'\nimport { multicall } from 'state/multicall/reducer'\nimport { transactions } from 'state/transactions/reducer'\nimport { updateVersion } from 'state/global/actions'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'catalog']\n\nconst store = configureStore({\n  reducer: {\n    // APPAREL\n    catalog,\n    // MISC\n    application,\n    // BLOCKCHAIN\n    blockchain,\n    multicall,\n    transactions,\n    user\n  },\n  middleware: defaultMiddleware =>\n    defaultMiddleware({\n      thunk: true\n    }).concat(save({ states: PERSISTED_KEYS })),\n  preloadedState: load({ states: PERSISTED_KEYS, disableWarnings: process.env.NODE_ENV === 'test' })\n})\n\nstore.dispatch(updateVersion())\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport XHR from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\ni18next\n  .use(XHR)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: `./locales/{{lng}}.json`\n    },\n    react: {\n      useSuspense: true\n    },\n    fallbackLng: 'en',\n    preload: ['en'],\n    keySeparator: false,\n    interpolation: { escapeValue: false }\n  })\n\nexport default i18next\n","// import ethereumLogoUrl from 'assets/images/ethereum-logo.png'\n// import arbitrumLogoUrl from 'assets/svg/arbitrum_logo.svg'\n// import optimismLogoUrl from 'assets/svg/optimistic_ethereum.svg'\n// import ms from 'ms.macro'\n\nimport EthereumLogo from 'assets/chains/network-mainnet-logo.svg' // mod\nimport RinkebyLogo from 'assets/chains/network-rinkeby-logo.svg' // mod\nimport GnosisChainLogo from 'assets/chains/network-gnosis-chain-logo.svg' // mod\n\nexport enum SupportedChainId {\n  MAINNET = 1,\n  RINKEBY = 4,\n  // ROPSTEN = 3,\n  // GOERLI = 5,\n  // KOVAN = 42,\n  // ARBITRUM_ONE = 42161,\n  // ARBITRUM_RINKEBY = 421611,\n  // OPTIMISM = 10,\n  // OPTIMISTIC_KOVAN = 69,\n\n  XDAI = 100\n}\n\nexport const ALL_SUPPORTED_CHAIN_IDS: SupportedChainId[] = [\n  SupportedChainId.MAINNET,\n  SupportedChainId.RINKEBY,\n  SupportedChainId.XDAI\n  // SupportedChainId.ROPSTEN,\n  // SupportedChainId.GOERLI,\n  // SupportedChainId.KOVAN,\n  // SupportedChainId.ARBITRUM_ONE,\n  // SupportedChainId.ARBITRUM_RINKEBY,\n  // SupportedChainId.OPTIMISM,\n  // SupportedChainId.OPTIMISTIC_KOVAN,\n]\n\nexport const L1_CHAIN_IDS = [\n  SupportedChainId.MAINNET,\n  SupportedChainId.RINKEBY,\n  SupportedChainId.XDAI\n  // SupportedChainId.ROPSTEN,\n  // SupportedChainId.GOERLI,\n  // SupportedChainId.KOVAN,\n] as const\n\nexport type SupportedL1ChainId = typeof L1_CHAIN_IDS[number]\n\nexport const L2_CHAIN_IDS = [\n  // SupportedChainId.ARBITRUM_ONE,\n  // SupportedChainId.ARBITRUM_RINKEBY,\n  // SupportedChainId.OPTIMISM,\n  // SupportedChainId.OPTIMISTIC_KOVAN,\n] as const\n\nexport type SupportedL2ChainId = typeof L2_CHAIN_IDS[number]\n\nexport interface L1ChainInfo {\n  readonly blockWaitMsBeforeWarning?: number\n  readonly docs: string\n  readonly explorer: string\n  readonly infoLink: string\n  readonly label: string\n  readonly logoUrl?: string\n  readonly rpcUrls?: string[]\n  readonly nativeCurrency: {\n    name: string // 'Goerli ETH',\n    symbol: string // 'gorETH',\n    decimals: number //18,\n  }\n}\nexport interface L2ChainInfo extends L1ChainInfo {\n  readonly bridge: string\n  readonly logoUrl: string\n  readonly statusPage?: string\n}\n\nexport type ChainInfo = { readonly [chainId: number]: (L1ChainInfo & { logoUrl: string }) | L2ChainInfo } & {\n  readonly [chainId in SupportedL2ChainId]: L2ChainInfo\n} &\n  { readonly [chainId in SupportedL1ChainId]: L1ChainInfo }\n\nexport const CHAIN_INFO: ChainInfo = {\n  /* [SupportedChainId.ARBITRUM_ONE]: {\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://arbiscan.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum',\n    label: 'Arbitrum',\n    logoUrl: arbitrumLogoUrl,\n    nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n  },\n  [SupportedChainId.ARBITRUM_RINKEBY]: {\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://rinkeby-explorer.arbitrum.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum/',\n    label: 'Arbitrum Rinkeby',\n    logoUrl: arbitrumLogoUrl,\n    nativeCurrency: { name: 'Rinkeby ArbETH', symbol: 'rinkArbETH', decimals: 18 },\n    rpcUrls: ['https://rinkeby.arbitrum.io/rpc'],\n  }, */\n  [SupportedChainId.MAINNET]: {\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://gnosis-protocol.io/mainnet',\n    infoLink: '',\n    label: 'Ethereum',\n    logoUrl: EthereumLogo, // mod\n    nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 }\n  },\n  [SupportedChainId.RINKEBY]: {\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://gnosis-protocol.io/rinkeby',\n    infoLink: '',\n    label: 'Rinkeby',\n    nativeCurrency: { name: 'Rinkeby ETH', symbol: 'rinkETH', decimals: 18 },\n    logoUrl: RinkebyLogo // mod\n  },\n  /* [SupportedChainId.ROPSTEN]: {\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://ropsten.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Ropsten',\n    nativeCurrency: { name: 'Ropsten ETH', symbol: 'ropETH', decimals: 18 },\n  },\n  [SupportedChainId.KOVAN]: {\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://kovan.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Kovan',\n    nativeCurrency: { name: 'Kovan ETH', symbol: 'kovETH', decimals: 18 },\n  },\n  [SupportedChainId.GOERLI]: {\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://goerli.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Görli',\n    nativeCurrency: { name: 'Görli ETH', symbol: 'görETH', decimals: 18 },\n  },\n  [SupportedChainId.OPTIMISM]: {\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://gateway.optimism.io/',\n    docs: 'https://optimism.io/',\n    explorer: 'https://optimistic.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism',\n    label: 'OΞ',\n    logoUrl: optimismLogoUrl,\n    nativeCurrency: { name: 'Optimistic ETH', symbol: 'ETH', decimals: 18 },\n    rpcUrls: ['https://mainnet.optimism.io'],\n    statusPage: 'https://optimism.io/status',\n  },\n  [SupportedChainId.OPTIMISTIC_KOVAN]: {\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://gateway.optimism.io/',\n    docs: 'https://optimism.io/',\n    explorer: 'https://optimistic.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism',\n    label: 'Optimistic Kovan',\n    rpcUrls: ['https://kovan.optimism.io'],\n    logoUrl: optimismLogoUrl,\n    nativeCurrency: { name: 'Optimistic kovETH', symbol: 'kovOpETH', decimals: 18 },\n    statusPage: 'https://optimism.io/status',\n  }, */\n  [SupportedChainId.XDAI]: {\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://blockscout.com/xdai/mainnet/  ',\n    infoLink: '',\n    label: 'Gnosis Chain',\n    logoUrl: GnosisChainLogo, // mod\n    nativeCurrency: { name: 'xDai', symbol: 'XDAI', decimals: 18 }\n  }\n}\n\nexport const NETWORK_LABELS: { [chainId in SupportedChainId | number]: string } = {\n  [SupportedChainId.MAINNET]: 'Ethereum',\n  [SupportedChainId.RINKEBY]: 'Rinkeby',\n  [SupportedChainId.XDAI]: 'Gnosis Chain' // mod\n  // [SupportedChainId.ROPSTEN]: 'Ropsten',\n  // [SupportedChainId.GOERLI]: 'Görli',\n  // [SupportedChainId.KOVAN]: 'Kovan',\n  // [SupportedChainId.ARBITRUM_KOVAN]: 'kArbitrum',\n  // [SupportedChainId.ARBITRUM_ONE]: 'Arbitrum One',\n}\n","import React from 'react'\nimport { ApolloClient, ApolloProvider as ApolloProviderBase, createHttpLink, InMemoryCache } from '@apollo/client'\n\nconst link = createHttpLink({\n  uri: `https://${process.env.REACT_APP_SHOPIFY_STORE_DOMAIN}/api/${process.env.REACT_APP_SHOPIFY_API_VERSION}/graphql.json`,\n  headers: {\n    'X-Shopify-Storefront-Access-Token': process.env.REACT_APP_SHOPIFY_STOREFRONT_TOKEN,\n    Accept: 'application/graphql'\n  },\n  fetch\n})\n\nconst apolloClient = new ApolloClient({\n  cache: new InMemoryCache(),\n  link\n})\n\nconst ApolloProvider: React.FC = ({ children }) => (\n  <ApolloProviderBase client={apolloClient}>{children}</ApolloProviderBase>\n)\n\nexport default ApolloProvider\n","export default __webpack_public_path__ + \"static/media/network-mainnet-logo.ccc77767.svg\";","export default __webpack_public_path__ + \"static/media/network-rinkeby-logo.16c794f3.svg\";","export default __webpack_public_path__ + \"static/media/network-gnosis-chain-logo.2c5a4968.svg\";","import { Token, WETH9 } from '@uniswap/sdk-core'\nimport { SupportedChainId } from './chains'\n\nexport const WETH_LOGO_URI =\n  'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png'\nexport const XDAI_LOGO_URI =\n  'https://raw.githubusercontent.com/1Hive/default-token-list/master/src/assets/xdai/0xe91d153e0b41518a2ce8dd3d7944fa863463a97d/logo.png'\n\n// Gnosis Chain\nexport const XDAI_SYMBOL = 'XDAI'\nexport const XDAI_NAME = 'xDai'\nexport const WXDAI = new Token(\n  SupportedChainId.XDAI,\n  '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',\n  18,\n  'WXDAI',\n  'Wrapped XDAI'\n)\n\nexport const WETH9_EXTENDED: { [chainId: number]: Token } = {\n  ...WETH9,\n  [SupportedChainId.XDAI]: WXDAI\n}\n","import { SupportedChainId } from '.'\nimport { constructSameAddressMap } from 'blockchain/utils/constructSameAddressMap'\n\nexport type AddressMap = { [chainId: number]: string }\n\nexport const ARGENT_WALLET_DETECTOR_ADDRESS: AddressMap = {\n  [SupportedChainId.MAINNET]: '0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8'\n}\n\nexport const ENS_REGISTRAR_ADDRESSES: AddressMap = {\n  [SupportedChainId.MAINNET]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [SupportedChainId.RINKEBY]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n}\n\nexport const MULTICALL_ADDRESS: AddressMap = {\n  ...constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984'),\n  [SupportedChainId.XDAI]: '0x0f41c16b8ad27c11f181eca85f0941868c1297af'\n}\n","import { L1_CHAIN_IDS, SupportedChainId } from 'blockchain/constants/chains'\n\nexport function constructSameAddressMap<T extends string>(\n  address: T,\n  additionalNetworks: SupportedChainId[] = []\n): { [chainId: number]: T } {\n  return (L1_CHAIN_IDS as readonly SupportedChainId[])\n    .concat(additionalNetworks)\n    .reduce<{ [chainId: number]: T }>((memo, chainId) => {\n      memo[chainId] = address\n      return memo\n    }, {})\n}\n","import { FortmaticConnector as FortmaticConnectorCore } from '@web3-react/fortmatic-connector'\nimport { SupportedChainId as ChainId } from 'blockchain/constants/chains'\n\nexport const OVERLAY_READY = 'OVERLAY_READY'\n\ntype FormaticSupportedChains = Extract<ChainId, ChainId.MAINNET | ChainId.RINKEBY>\n\nconst CHAIN_ID_NETWORK_ARGUMENT: { readonly [chainId in FormaticSupportedChains]: string | undefined } = {\n  [ChainId.MAINNET]: undefined,\n  [ChainId.RINKEBY]: 'rinkeby'\n}\n\nexport class FortmaticConnector extends FortmaticConnectorCore {\n  async activate() {\n    if (!this.fortmatic) {\n      const { default: Fortmatic } = await import('fortmatic')\n\n      const { apiKey, chainId } = this as any\n      if (chainId in CHAIN_ID_NETWORK_ARGUMENT) {\n        this.fortmatic = new Fortmatic(apiKey, CHAIN_ID_NETWORK_ARGUMENT[chainId as FormaticSupportedChains])\n      } else {\n        throw new Error(`Unsupported network ID: ${chainId}`)\n      }\n    }\n\n    const provider = this.fortmatic.getProvider()\n\n    const pollForOverlayReady = new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (provider.overlayReady) {\n          clearInterval(interval)\n          this.emit(OVERLAY_READY)\n          resolve('Resolved!')\n        }\n      }, 200)\n    })\n\n    const [account] = await Promise.all([\n      provider.enable().then((accounts: string[]) => accounts[0]),\n      pollForOverlayReady\n    ])\n\n    return { provider: this.fortmatic.getProvider(), chainId: (this as any).chainId, account }\n  }\n}\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\nimport { devDebug } from 'utils/logging'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n  public readonly chainId: number\n  public readonly url: string\n  public readonly host: string\n  public readonly path: string\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    devDebug('Clearing batch', this.batch)\n    const batch = this.batch\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map(item => item.request))\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      // batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      // batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method }\n      } = byKey[result.id]\n      if (resolve) {\n        if ('error' in result) {\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n        } else if ('result' in result) {\n          resolve(result.result)\n        } else {\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n        }\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: unknown[] | Record<any, any> },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then(result => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch(error => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: unknown[] | Record<any, any>\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params\n        },\n        resolve,\n        reject\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return\n  }\n}\n","import { Web3Provider } from '@ethersproject/providers'\nimport { PortisConnector } from '@web3-react/portis-connector'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n\nimport { FortmaticConnector } from './Fortmatic'\nimport { NetworkConnector } from './NetworkConnector'\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY\n\nif (typeof INFURA_KEY === 'undefined') {\n  throw new Error(`REACT_APP_INFURA_KEY must be a defined environment variable`)\n}\n\nexport const WALLET_CONNECT_BRIDGE = process.env.WALLET_CONNECT_BRIDGE || 'wss://safe-walletconnect.gnosis.io'\n\ntype RpcNetworks = { [chainId: number]: string }\n\nexport function getSupportedChainIds(): number[] {\n  const supportedChainIdsEnv = process.env.REACT_APP_SUPPORTED_CHAIN_IDS\n\n  if (!supportedChainIdsEnv) {\n    throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\n  }\n\n  const chainIds = supportedChainIdsEnv.split(',').map(chainId => Number(chainId.trim()))\n\n  return chainIds\n}\n\nfunction getRpcNetworks(): [RpcNetworks, number[]] {\n  const defaultChainId = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1')\n\n  // Get list of supported chains\n  const chainIds = getSupportedChainIds()\n  if (chainIds.length === 0) {\n    throw new Error(`At least one network should be supported. REACT_APP_CHAIN_ID`)\n  }\n\n  // Make sure the default chain is in the list of supported chains\n  if (!chainIds.includes(defaultChainId)) {\n    throw new Error(\n      `The default chain id (${defaultChainId}) must be part of the list of supported networks: ${chainIds.join(', ')}`\n    )\n  }\n\n  // Return rpc urls per network\n  const rpcNetworks = chainIds.reduce<RpcNetworks>((acc, chainId) => {\n    const url = process.env['REACT_APP_NETWORK_URL_' + chainId]\n\n    if (!url) {\n      throw new Error(\n        `Network ${chainId} is supported, however 'REACT_APP_NETWORK_URL_${chainId} environment variable was not defined`\n      )\n    }\n\n    acc[chainId] = url\n\n    return acc\n  }, {})\n\n  // Get chainIds (excluding the NETWORK_CHAIN_ID)\n  // Reason: By convention we will return NETWORK_CHAIN_ID as the first element in the supported networks\n  const otherChainIds = Object.keys(rpcNetworks)\n    .map(Number)\n    .filter(networkId => networkId !== defaultChainId)\n  const supportedChainIds = [defaultChainId, ...otherChainIds]\n\n  return [rpcNetworks, supportedChainIds]\n}\n\nconst [rpcNetworks, supportedChainIds] = getRpcNetworks()\nexport const NETWORK_CHAIN_ID = supportedChainIds[0]\n\nexport const network = new NetworkConnector({\n  urls: rpcNetworks,\n  defaultChainId: NETWORK_CHAIN_ID\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds })\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: rpcNetworks,\n  bridge: WALLET_CONNECT_BRIDGE,\n  qrcode: true\n})\n\n// mainnet only\nexport const fortmatic = new FortmaticConnector({\n  apiKey: process.env.REACT_APP_FORTMATIC_KEY ?? '',\n  chainId: NETWORK_CHAIN_ID\n})\n\n// mainnet only\nexport const portis = new PortisConnector({\n  dAppId: process.env.REACT_APP_PORTIS_ID ?? '',\n  // TODO: Allow to configure multiple networks in portis\n  // networks: supportedChainIds\n  networks: [NETWORK_CHAIN_ID]\n})\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: rpcNetworks[NETWORK_CHAIN_ID],\n  appName: 'CowSwap',\n  appLogoUrl: 'https://raw.githubusercontent.com/gnosis/gp-swap-ui/develop/public/favicon.png'\n})\n\nexport enum WalletProvider {\n  INJECTED = 'INJECTED',\n  WALLET_CONNECT = 'WALLET_CONNECT',\n  FORMATIC = 'FORMATIC',\n  PORTIS = 'PORTIS',\n  WALLET_LINK = 'WALLET_LINK'\n}\n\nexport function getProviderType(connector: AbstractConnector | undefined): WalletProvider | undefined {\n  if (!connector) {\n    return undefined\n  }\n\n  switch (connector) {\n    case injected:\n      return WalletProvider.INJECTED\n\n    case walletconnect:\n      return WalletProvider.WALLET_CONNECT\n\n    case fortmatic:\n      return WalletProvider.FORMATIC\n\n    case portis:\n      return WalletProvider.PORTIS\n\n    case walletlink:\n      return WalletProvider.WALLET_LINK\n\n    default:\n      return undefined\n  }\n}\n","import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\n// last wallet provider key used in local storage\nexport const STORAGE_KEY_LAST_PROVIDER = 'lastProvider'\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  },\n  COINBASE_LINK: {\n    name: 'Open in Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Open in Coinbase Wallet app.',\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\n    color: '#315CF5',\n    mobile: true,\n    mobileOnly: true\n  },\n  FORTMATIC: {\n    connector: fortmatic,\n    name: 'Fortmatic',\n    iconName: 'fortmaticIcon.png',\n    description: 'Login using Fortmatic hosted wallet',\n    href: null,\n    color: '#6748FF',\n    mobile: true\n  },\n  Portis: {\n    connector: portis,\n    name: 'Portis',\n    iconName: 'portisIcon.png',\n    description: 'Login using Portis hosted wallet',\n    href: null,\n    color: '#4A6C9B',\n    mobile: true\n  }\n}\n\nexport const NetworkContextName = 'NETWORK'\n// Smart contract wallets are filtered out by default, no need to add them to this list\nexport const UNSUPPORTED_WC_WALLETS = new Set(['DeFi Wallet', 'WallETH'])\n","import { Web3Provider } from '@ethersproject/providers'\n\nexport default function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider, 'any')\n  library.pollingInterval = 15000\n  return library\n}\n","import { useMemo, useEffect, useState, useCallback } from 'react'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { isMobile } from 'react-device-detect'\nimport { getProviderType, injected, walletconnect, WalletProvider } from 'blockchain/connectors'\nimport { NetworkContextName, STORAGE_KEY_LAST_PROVIDER } from 'blockchain/constants'\n\nexport function useActiveWeb3React() {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\n/**\n * Provides a Web3Provider instance for active web3 connection, if any\n * Contrary to `getNetworkLibrary` that returns it for the default chainId\n */\nexport function useActiveWeb3Instance(): Web3Provider | undefined {\n  const { library } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!library?.provider) {\n      return\n    }\n    return new Web3Provider(library.provider)\n  }, [library])\n}\n\nexport function useEagerConnect() {\n  const { activate, active, connector } = useWeb3ReactCore()\n  const [tried, setTried] = useState(false)\n\n  // handle setting/removing wallet provider in local storage\n  const handleBeforeUnload = useCallback(() => {\n    const walletType = getProviderType(connector)\n\n    if (!walletType || !active) {\n      localStorage.removeItem(STORAGE_KEY_LAST_PROVIDER)\n    } else {\n      localStorage.setItem(STORAGE_KEY_LAST_PROVIDER, walletType)\n    }\n  }, [connector, active])\n\n  const connectInjected = useCallback(() => {\n    // check if the our application is authorized/connected with Metamask\n    injected.isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        if (isMobile && window.ethereum) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      }\n    })\n  }, [activate, setTried])\n\n  const connectWalletConnect = useCallback(() => {\n    activate(walletconnect, undefined, true).catch(() => {\n      setTried(true)\n    })\n  }, [activate, setTried])\n\n  useEffect(() => {\n    if (!active) {\n      const latestProvider = localStorage.getItem(STORAGE_KEY_LAST_PROVIDER)\n\n      // if there is no last saved provider set tried state to true\n      if (!latestProvider) {\n        // Try to auto-connect to the injected wallet\n        connectInjected()\n      } else if (latestProvider === WalletProvider.INJECTED) {\n        // MM is last provider\n        connectInjected()\n      } else if (latestProvider === WalletProvider.WALLET_CONNECT) {\n        // WC is last provider\n        connectWalletConnect()\n      }\n    }\n  }, [connectInjected, connectWalletConnect, active]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  useEffect(() => {\n    // add beforeunload event listener on initial component mount\n    window.addEventListener('beforeunload', handleBeforeUnload)\n\n    // remove beforeunload event listener on component unmount\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload)\n    }\n  })\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        // eat errors\n        activate(injected, undefined, true).catch(error => {\n          console.error('Failed to activate after chain changed', error)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch(error => {\n            console.error('Failed to activate after accounts changed', error)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n","import { Trans } from '@lingui/macro'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { network } from 'blockchain/connectors'\nimport { useEagerConnect, useInactiveListener } from 'blockchain/hooks'\nimport { NetworkContextName } from 'blockchain/constants'\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 20rem;\n`\n\nconst Message = styled.h2`\n  color: ${({ theme }) => theme.secondary1};\n`\n\nexport default function Web3ReactManager({ children }: { children: JSX.Element }) {\n  const { active } = useWeb3React()\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName)\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      activateNetwork(network)\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\n\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager)\n\n  // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n  if (triedEager && !active && networkError) {\n    return (\n      <MessageWrapper>\n        <Message>\n          <Trans>\n            Oops! An unknown error occurred. Please refresh the page, or visit from another browser or device.\n          </Trans>\n        </Message>\n      </MessageWrapper>\n    )\n  }\n\n  return children\n}\n","import { gql } from '@apollo/client'\nimport { FRAGMENT_PRODUCT_IMAGE, FRAGMENT_PRODUCT_VIDEO } from '../fragments'\n\nexport const QUERY_PRODUCT = gql`\n  ${FRAGMENT_PRODUCT_IMAGE}\n  ${FRAGMENT_PRODUCT_VIDEO}\n  query Product($amount: Int, $imageAmt: Int) {\n    products(first: $amount) {\n      nodes {\n        id\n        title\n        description\n        descriptionHtml\n        sizes: options {\n          values\n        }\n        updatedAt\n        featuredImage {\n          url\n        }\n        images(first: $imageAmt) {\n          nodes {\n            ...FragmentProductImage\n          }\n        }\n        media(first: $imageAmt, reverse: true) {\n          nodes {\n            ...FragmentProductVideo\n          }\n        }\n        brandingAssetMap: metafield(namespace: \"custom\", key: \"brandingassetmap\") {\n          value\n        }\n        color: metafield(namespace: \"custom\", key: \"color\") {\n          value\n        }\n        artistInfo: metafield(namespace: \"custom\", key: \"artistInfo\") {\n          value\n        }\n      }\n    }\n  }\n`\n","import { lazy, Suspense } from 'react'\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom'\n\nimport Web3ReactManager from 'components/blockchain/Web3ReactManager'\n\n// const Footer = lazy(() => import(/* webpackPrefetch: true,  webpackChunkName: \"FOOTER\" */ 'components/Footer'))\nconst Header = lazy(() => import(/* webpackPrefetch: true,  webpackChunkName: \"HEADER\" */ 'components/Header'))\nconst Popups = lazy(() => import(/* webpackPrefetch: true,  webpackChunkName: \"POPUPS\" */ 'components/Popups'))\nconst Catalog = lazy(() => import(/* webpackPrefetch: true,  webpackChunkName: \"CATALOG\" */ 'pages/Catalog'))\nconst AboutUs = lazy(() => import(/* webpackPrefetch: true,  webpackChunkName: \"ABOUTUS\" */ 'pages/AboutUs'))\nconst NotFound = lazy(() => import(/* webpackChunkName: \"NOTFOUND\" */ 'pages/Error/NotFound'))\nconst Navigation = lazy(() => import(/* webpackChunkName: \"NAVIGATION\" */ 'components/Navigation'))\nconst SingleItem = lazy(() => import(/* webpackChunkName: \"SINGLEITEM\" */ 'pages/SingleItem'))\n\nimport { FixedAnimatedLoader } from 'components/Loader'\nimport { isMobile } from 'utils'\nimport { useQuery } from '@apollo/client'\nimport { QUERY_PRODUCT } from 'shopify/graphql/queries/products'\n\n// TODO: move\n// Redirects to swap but only replace the pathname\nconst DEFAULT_CATALOG_YEAR = '2022'\nconst DEFAULT_CATALOG_SEASON = 'FALL'\nexport function RedirectPathToCatalogOnly({ location }: RouteComponentProps) {\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: `/goods/${DEFAULT_CATALOG_YEAR}/${DEFAULT_CATALOG_SEASON}/`\n      }}\n    />\n  )\n}\n\nexport default function App() {\n  const { loading } = useQuery(QUERY_PRODUCT, { variables: { amount: 5, imageAmt: 20 } })\n\n  if (loading) return <FixedAnimatedLoader loadText=\"PSTL\" />\n\n  return (\n    <Web3ReactManager>\n      <Suspense fallback={<FixedAnimatedLoader loadText=\"PSTL\" />}>\n        <Popups />\n        {/* HEADER */}\n        <Header />\n        {/* SIDE-NAV */}\n        {!isMobile && <Navigation />}\n        {/* ARTICLE CONTENT */}\n        <Switch>\n          <Route exact path=\"/goods/:year/:season\" component={Catalog} />\n          <Route exact path=\"/goods/:year/:season/:item\" component={SingleItem} />\n          <Route exact path=\"/aboutus\" component={AboutUs} />\n          <Route exact path=\"/404\" component={NotFound} />\n          <Route component={RedirectPathToCatalogOnly} />\n          <Route component={NotFound} />\n        </Switch>\n        {/* FOOTER */}\n        {/* <Footer /> */}\n      </Suspense>\n    </Web3ReactManager>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { hexStripZeros } from '@ethersproject/bytes'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { L1ChainInfo, L2ChainInfo, SupportedChainId } from 'blockchain/constants/chains'\n\ninterface AddNetworkArguments {\n  library: Web3Provider\n  chainId: SupportedChainId\n  info: L1ChainInfo | L2ChainInfo\n}\n\n// provider.request returns Promise<any>, but wallet_switchEthereumChain must return null or throw\n// see https://github.com/rekmarks/EIPs/blob/3326-create/EIPS/eip-3326.md for more info on wallet_switchEthereumChain\nexport async function addNetwork({ library, chainId, info }: AddNetworkArguments): Promise<null | void> {\n  if (!library?.provider?.request) {\n    return\n  }\n  const formattedChainId = hexStripZeros(BigNumber.from(chainId).toHexString())\n  try {\n    await library?.provider.request({\n      method: 'wallet_addEthereumChain',\n      params: [\n        {\n          chainId: formattedChainId,\n          chainName: info.label,\n          rpcUrls: info.rpcUrls,\n          nativeCurrency: info.nativeCurrency,\n          blockExplorerUrls: [info.explorer]\n        }\n      ]\n    })\n  } catch (error) {\n    console.error('error adding eth network: ', chainId, info, error)\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { hexStripZeros } from '@ethersproject/bytes'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { CHAIN_INFO, SupportedChainId } from 'blockchain/constants/chains'\n\nimport { addNetwork } from './addNetwork'\n\ninterface SwitchNetworkArguments {\n  library: Web3Provider\n  chainId?: SupportedChainId\n}\n\n// provider.request returns Promise<any>, but wallet_switchEthereumChain must return null or throw\n// see https://github.com/rekmarks/EIPs/blob/3326-create/EIPS/eip-3326.md for more info on wallet_switchEthereumChain\nexport async function switchToNetwork({ library, chainId }: SwitchNetworkArguments): Promise<null | void> {\n  if (!library?.provider?.request) {\n    return\n  }\n  if (!chainId && library?.getNetwork) {\n    ;({ chainId } = await library.getNetwork())\n  }\n  const formattedChainId = hexStripZeros(BigNumber.from(chainId).toHexString())\n  try {\n    await library?.provider.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: formattedChainId }]\n    })\n  } catch (error) {\n    // 4902 is the error code for attempting to switch to an unrecognized chainId\n    if (error.code === 4902 && chainId !== undefined) {\n      const info = CHAIN_INFO[chainId]\n\n      // metamask (only known implementer) automatically switches after a network is added\n      // the second call is done here because that behavior is not a part of the spec and cannot be relied upon in the future\n      // metamask's behavior when switching to the current network is just to return null (a no-op)\n      await addNetwork({ library, chainId, info })\n      await switchToNetwork({ library, chainId })\n    } else {\n      throw error\n    }\n  }\n}\n","import { useCallback } from 'react'\nimport { useActiveWeb3React } from 'blockchain/hooks'\nimport { AppState, useAppDispatch, useAppSelector } from 'state'\nimport { setChainConnectivityWarning, setImplements3085, updateBlockNumber, updateChainId } from './reducer'\n\n// GETTERS\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useAppSelector((state: AppState) => state.blockchain.blockNumber[chainId ?? -1])\n}\nexport function useChainId() {\n  return useAppSelector((state: AppState) => state.blockchain.chainId)\n}\nexport function useChainConnectivityWarning() {\n  return useAppSelector((state: AppState) => state.blockchain.chainConnectivityWarning)\n}\nexport function useImplements3085() {\n  return useAppSelector((state: AppState) => state.blockchain.implements3085)\n}\n\n// SETTERS\nexport function useSetChainConnectivityWarning() {\n  const dispatch = useAppDispatch()\n  return useCallback((payload: boolean) => dispatch(setChainConnectivityWarning(payload)), [dispatch])\n}\nexport function useSetImplements3085() {\n  const dispatch = useAppDispatch()\n  return useCallback((payload: boolean) => dispatch(setImplements3085(payload)), [dispatch])\n}\nexport function useUpdateBlockNumber() {\n  const dispatch = useAppDispatch()\n  return useCallback((payload: { chainId: number; blockNumber: number }) => dispatch(updateBlockNumber(payload)), [\n    dispatch\n  ])\n}\nexport function useUpdateChainId() {\n  const dispatch = useAppDispatch()\n  return useCallback((payload: number | null) => dispatch(updateChainId(payload)), [dispatch])\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { CHAIN_INFO } from 'blockchain/constants/chains'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { useActiveWeb3React } from 'blockchain/hooks'\nimport ms from 'ms.macro'\nimport { supportedChainId } from 'blockchain/utils/supportedChainId'\nimport { switchToNetwork } from 'blockchain/utils/switchToNetwork'\n\nimport {\n  useBlockNumber,\n  useChainConnectivityWarning,\n  useSetChainConnectivityWarning,\n  useSetImplements3085,\n  useUpdateBlockNumber,\n  useUpdateChainId\n} from 'state/blockchain/hooks'\n\nconst NETWORK_HEALTH_CHECK_MS = ms`15s`\nconst DEFAULT_MS_BEFORE_WARNING = ms`10m`\n\nfunction useBlockWarningTimer() {\n  const { chainId } = useActiveWeb3React()\n  const currentBlock = useBlockNumber()\n\n  const chainConnectivityWarningActive = useChainConnectivityWarning()\n  const setChainConnectivityWarning = useSetChainConnectivityWarning()\n\n  const [msSinceLastBlock, setMsSinceLastBlock] = useState(0)\n\n  const timeout = useRef<NodeJS.Timeout>()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    setMsSinceLastBlock(0)\n  }, [currentBlock])\n\n  useEffect(() => {\n    const waitMsBeforeWarning =\n      (chainId ? CHAIN_INFO[chainId]?.blockWaitMsBeforeWarning : DEFAULT_MS_BEFORE_WARNING) ?? DEFAULT_MS_BEFORE_WARNING\n\n    timeout.current = setTimeout(() => {\n      setMsSinceLastBlock(NETWORK_HEALTH_CHECK_MS + msSinceLastBlock)\n      if (msSinceLastBlock > waitMsBeforeWarning && isWindowVisible) {\n        setChainConnectivityWarning(true)\n      } else if (chainConnectivityWarningActive) {\n        setChainConnectivityWarning(false)\n      }\n    }, NETWORK_HEALTH_CHECK_MS)\n\n    return function cleanup() {\n      if (timeout.current) {\n        clearTimeout(timeout.current)\n      }\n    }\n  }, [\n    chainId,\n    chainConnectivityWarningActive,\n    isWindowVisible,\n    msSinceLastBlock,\n    setMsSinceLastBlock,\n    setChainConnectivityWarning\n  ])\n}\n\nexport default function Updater(): null {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const updateChainId = useUpdateChainId()\n  const updateBlockNumber = useUpdateBlockNumber()\n  const setImplements3085 = useSetImplements3085()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null\n  })\n\n  const windowVisible = useIsWindowVisible()\n\n  useBlockWarningTimer()\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState(state => {\n        if (chainId === state.chainId) {\n          if (typeof state.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) }\n        }\n        return state\n      })\n    },\n    [chainId, setState]\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch(error => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber })\n  }, [windowVisible, debouncedState.blockNumber, debouncedState.chainId, updateBlockNumber])\n\n  useEffect(() => {\n    updateChainId(debouncedState.chainId ? supportedChainId(debouncedState.chainId) ?? null : null)\n  }, [debouncedState.chainId, updateChainId])\n\n  useEffect(() => {\n    if (!account || !library?.provider?.request || !library?.provider?.isMetaMask) {\n      return\n    }\n    switchToNetwork({ library })\n      .then(x => x ?? setImplements3085(true))\n      .catch(() => setImplements3085(false))\n  }, [account, chainId, library, setImplements3085])\n\n  return null\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { SupportedChainId } from 'blockchain/constants/chains'\n\n/**\n * Returns the input chain ID if chain is supported. If not, return undefined\n * @param chainId a chain ID, which will be returned if it is a supported chain ID\n */\nexport function supportedChainId(chainId: number): number | undefined {\n  if (chainId in SupportedChainId) {\n    return chainId\n  }\n  return undefined\n}\n","import { useEffect } from 'react'\nimport { useActiveWeb3React } from 'blockchain/hooks'\nimport { useBlockNumber } from 'state/blockchain/hooks'\n\nimport { useAddPopup, useFinalizeTransaction, useCheckedTransaction } from 'state/application/hooks'\nimport { useAppSelector } from 'state'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: Record<any, any>; lastCheckedBlockNumber?: number }\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  } else if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  } else {\n    // otherwise every block\n    return true\n  }\n}\n\nexport default function Updater(): null {\n  const { chainId, library } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const state = useAppSelector(state => state.transactions)\n\n  // show popup on confirm\n  const addPopup = useAddPopup()\n  const finalizeTransaction = useFinalizeTransaction()\n  const checkedTransaction = useCheckedTransaction()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    const transactions = state[chainId] ?? {}\n\n    Object.keys(transactions)\n      .filter(hash => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach(hash => {\n        library\n          .getTransactionReceipt(hash)\n          .then(receipt => {\n            if (receipt) {\n              finalizeTransaction({\n                chainId,\n                hash,\n                receipt: {\n                  blockHash: receipt.blockHash,\n                  blockNumber: receipt.blockNumber,\n                  contractAddress: receipt.contractAddress,\n                  from: receipt.from,\n                  status: receipt.status,\n                  to: receipt.to,\n                  transactionHash: receipt.transactionHash,\n                  transactionIndex: receipt.transactionIndex\n                }\n              })\n\n              addPopup(\n                {\n                  txn: {\n                    hash,\n                    success: receipt.status === 1,\n                    summary: transactions[hash]?.summary\n                  }\n                },\n                hash\n              )\n            } else {\n              checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber })\n            }\n          })\n          .catch(error => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, lastBlockNumber, addPopup, state, finalizeTransaction, checkedTransaction])\n\n  return null\n}\n","import { useEffect } from 'react'\nimport { ThemeModes } from 'theme/styled'\nimport { useThemeManager } from './hooks'\n\nexport default function Updater(): null {\n  const { theme, setMode } = useThemeManager()\n\n  // keep dark mode in sync with the system\n  useEffect(() => {\n    const autoDarkHandler = (match: MediaQueryListEvent) => {\n      const autoTheme = match.matches ? ThemeModes.DARK : ThemeModes.LIGHT\n      setMode(autoTheme)\n    }\n\n    const match = window?.matchMedia('(prefers-color-scheme: dark)')\n\n    // If system prefers dark mode and user theme isnt already explicitly set by user\n    if (match.matches && theme.autoDetect) {\n      setMode(ThemeModes.DARK)\n    }\n\n    if (match?.addEventListener) {\n      match?.addEventListener('change', autoDarkHandler)\n    }\n\n    return () => {\n      if (match?.removeEventListener) {\n        match?.removeEventListener('change', autoDarkHandler)\n      }\n    }\n  }, [setMode, theme])\n\n  return null\n}\n","import { useCollections } from 'pages/Catalog/hooks'\n\nexport default function Updater() {\n  useCollections({\n    collectionAmount: 1,\n    productAmt: 5,\n    imageAmt: 20\n  })\n\n  return null\n}\n","export default __webpack_public_path__ + \"static/media/Roboto-Thin.1711b41f.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-ThinItalic.026cbce1.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Light.8be2d148.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-LightItalic.43cbee78.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Regular.a8d6ac03.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Italic.beb7fe13.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Medium.7429a63c.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-MediumItalic.56a82359.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Bold.75371f53.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-BoldItalic.60c1f67b.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Black.2a428584.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-BlackItalic.77e50ab1.ttf\";","import { createGlobalStyle } from 'styled-components/macro'\nimport Roboto100 from 'assets/fonts/Roboto/Roboto-Thin.ttf'\nimport Roboto100Italic from 'assets/fonts/Roboto/Roboto-ThinItalic.ttf'\nimport Roboto300 from 'assets/fonts/Roboto/Roboto-Light.ttf'\nimport Roboto300Italic from 'assets/fonts/Roboto/Roboto-LightItalic.ttf'\nimport Roboto400 from 'assets/fonts/Roboto/Roboto-Regular.ttf'\nimport Roboto400Italic from 'assets/fonts/Roboto/Roboto-Italic.ttf'\nimport Roboto500 from 'assets/fonts/Roboto/Roboto-Medium.ttf'\nimport Roboto500Italic from 'assets/fonts/Roboto/Roboto-MediumItalic.ttf'\nimport Roboto700 from 'assets/fonts/Roboto/Roboto-Bold.ttf'\nimport Roboto700Italic from 'assets/fonts/Roboto/Roboto-BoldItalic.ttf'\nimport Roboto900 from 'assets/fonts/Roboto/Roboto-Black.ttf'\nimport Roboto900Italic from 'assets/fonts/Roboto/Roboto-BlackItalic.ttf'\n\nconst FontStyles = createGlobalStyle`\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto100}) format('truetype');\n        font-style: normal;\n        font-weight: 100;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto100Italic}) format('truetype');\n        font-style: italic;\n        font-weight: 100;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto300}) format('truetype');\n        font-style: normal;\n        font-weight: 300;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto300Italic}) format('truetype');\n        font-style: italic;\n        font-weight: 300;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto400}) format('truetype');\n        font-style: normal;\n        font-weight: 400;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto400Italic}) format('truetype');\n        font-style: italic;\n        font-weight: 400;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto500}) format('truetype');\n        font-style: normal;\n        font-weight: 500;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto500Italic}) format('truetype');\n        font-style: italic;\n        font-weight: 500;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto700}) format('truetype');\n        font-style: normal;\n        font-weight: 700;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto700Italic}) format('truetype');\n        font-style: italic;\n        font-weight: 700;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto900}) format('truetype');\n        font-style: normal;\n        font-weight: 900;\n    }\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto900Italic}) format('truetype');\n        font-style: italic;\n        font-weight: 900;\n    }\n`\n\nexport default FontStyles\n","import { createGlobalStyle, css } from 'styled-components/macro'\nimport { darken, transparentize } from 'polished'\n\nimport { getThemeColours, setTextColour, setBgColour } from '../utils'\nimport { ThemeModes } from '../styled'\nimport FontStyles from './fonts'\nimport { useAppColourTheme } from 'state/user/hooks'\nimport { useMemo } from 'react'\nimport { useGetCurrentOnScreenItem } from 'state/catalog/hooks'\n\nexport { FontStyles }\n\nexport const TopGlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    \n    &::-webkit-scrollbar {\n      // TODO: marked to find easier\n      // hide scrollbar\n      width: 0px;\n      border-radius: 16px;\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n      background: transparent;\n    }\n  \n    &::-webkit-scrollbar-thumb {\n      background: ghostwhite;\n      border-radius: 16px;\n      background-clip: padding-box;\n    }\n\n  }\n\n  html,\n  input,\n  textarea,\n  button {\n    font-family: 'Roboto', 'Inter', sans-serif;\n    font-display: fallback;\n  }\n  \n  @supports (font-variation-settings: normal) {\n    html,\n    input,\n    textarea,\n    button {\n      font-family: 'Roboto', 'Inter var', sans-serif;\n    }\n  }\n  \n  html,\n  body {\n    font-size: 10px;\n    margin: 0;\n    padding: 0;\n  }\n\n  \n  html {\n    font-variant: none;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n  }\n\n  body {\n    // BG\n    background-position: 0 -30vh;\n    background-repeat: no-repeat;\n  }\n\n  body > div#root {\n    // LAYOUT\n    height: 100vh;\n    display: grid;\n    grid-template-areas:  'header header'\n                          'nav main'\n                          'footer footer';\n    grid-template-columns: minmax(auto, max-content) 5fr;\n    grid-template-rows: auto 1fr auto;\n    overflow: hidden;\n  }\n\n  header {\n    grid-area: header;\n  }\n\n  footer {\n    grid-area: footer;\n  }\n\n  nav {\n    grid-area: nav;\n  }\n\n  article {\n    grid-area: main;\n  }\n\n  nav, article {\n    overflow-y: auto;\n  }\n\n  a {\n    color: ${getThemeColours(ThemeModes.LIGHT).blue1};\n  }\n  \n  button {\n    user-select: none;\n  }\n\n  select {\n    // A reset of styles, including removing the default dropdown arrow\n    appearance: none;\n    // Additional resets for further consistency\n    background-color: transparent;\n    border: none;\n    padding: 0 1em 0 0;\n    margin: 0;\n    width: 100%;\n    font-family: inherit;\n    font-size: inherit;\n    cursor: inherit;\n    line-height: inherit;\n  }\n`\n\n/* \nexport const DANTES_LAKE_WALK = 'https://ik.imagekit.io/pastelle/tr:q-40/APPAREL/2022/FALL/VIRGIL/IMAGES/nav-bar.png'\nconst TINY_FORMAT = '?tr=h-1,w-1'\nconst MAIN_FORMAT = '?tr=q-45'\n*/\n\nexport const flickerAnimation = css<{ frameBgColor?: string }>`\n  @keyframes flickerIn {\n    0% {\n      background-color: ${({ theme, frameBgColor = theme.bg1 }) => transparentize(1, frameBgColor)};\n    }\n    5% {\n      background-color: ${({ theme, frameBgColor = theme.bg1 }) => transparentize(0, frameBgColor)};\n    }\n    8% {\n      background-color: ${({ theme, frameBgColor = theme.bg1 }) => transparentize(1, frameBgColor)};\n    }\n    9% {\n      background-color: ${({ theme, frameBgColor = theme.bg1 }) => transparentize(0, frameBgColor)};\n    }\n    12% {\n      background-color: ${({ theme, frameBgColor = theme.bg1 }) => transparentize(1, frameBgColor)};\n    }\n    18% {\n      background-color: ${({ theme, frameBgColor = theme.bg1 }) => transparentize(0, frameBgColor)};\n    }\n    24% {\n      background-color: ${({ theme, frameBgColor = theme.bg1 }) => transparentize(0, frameBgColor)};\n    }\n    28% {\n      background-color: ${({ theme, frameBgColor = theme.bg1 }) => transparentize(1, frameBgColor)};\n    }\n    42% {\n      background-color: ${({ theme, frameBgColor = theme.bg1 }) => transparentize(0, frameBgColor)};\n    }\n  }\n`\n\nexport const ThemedGlobalStyle = createGlobalStyle<{\n  frameBgColor?: string\n  headerLogo?: string\n  navLogo?: string\n  animation?: boolean\n  animationDelay?: number\n}>`\n  * {\n    &::-webkit-scrollbar-thumb {\n      background: transparent;\n    }\n  }\n\n  html {\n    ${setTextColour('text1')}\n    ${setBgColour('bg2')}\n  }\n\n  body {\n    background-image: ${({ theme }): string => `\n      radial-gradient(\n        50% 50% at 50% 50%,\n        ${transparentize(0.9, theme.primary1)} 0%,\n        ${transparentize(1, theme.bg1)} 100%\n      );`}\n\n    transition: background-color, background-image, color 0.3s ease-in-out;\n  }\n\n  header, nav, footer {\n    background: ${({ theme, frameBgColor = transparentize(0.3, theme.bg1) }) => frameBgColor};\n  }\n\n  header {\n    background: ${({ headerLogo, theme, frameBgColor = transparentize(0.3, theme.bg1) }) =>\n      headerLogo\n        ? `url(${headerLogo}) center no-repeat, url(${headerLogo + '?tr=q-10'}) 0px 0px no-repeat`\n        : frameBgColor};\n      \n    background-color: ${({ theme, frameBgColor = transparentize(0.3, theme.bg1) }) => frameBgColor};\n    background-size: cover;\n    background-blend-mode: difference;\n\n    #header-links-container {\n      background-color: ${({ frameBgColor, theme }) =>\n        frameBgColor ? darken(0.05, frameBgColor) : transparentize(0.3, theme.bg1)};\n    }\n  }\n\n  nav {\n    background: ${({ navLogo, theme, frameBgColor = transparentize(0.3, theme.bg1) }) =>\n      navLogo ? `url(${navLogo}) center no-repeat, url(${navLogo + '?tr=q-10'}) 5px repeat` : frameBgColor};\n    background-size: cover;\n    background-blend-mode: difference;\n    background-color: ${({ theme, frameBgColor = transparentize(0.3, theme.bg1) }) => frameBgColor};\n\n    ${({ animation = true }) => animation && flickerAnimation}\n    ${({ animation = true, animationDelay = 3 }) =>\n      animation &&\n      `\n        animation-name: flickerIn;\n        animation-duration: 4s;\n        animation-iteration-count: 2;\n        ${animationDelay && `animation-delay: ${animationDelay}s;`}\n    `}\n`\n\nexport const ThemedGlobalComponent = () => {\n  const theme = useAppColourTheme()\n\n  const currentItem = useGetCurrentOnScreenItem()\n\n  const { itemColor, navLogo, headerLogo, showAnimation } = useMemo(\n    () => ({\n      itemColor: theme.mode === ThemeModes.CHAMELEON ? currentItem?.color : undefined,\n      navLogo: theme.mode === ThemeModes.CHAMELEON ? currentItem?.navLogo : undefined,\n      headerLogo: theme.mode === ThemeModes.CHAMELEON ? currentItem?.headerLogo : undefined,\n      showAnimation: theme.mode === ThemeModes.CHAMELEON\n    }),\n    [currentItem?.headerLogo, currentItem?.color, currentItem?.navLogo, theme.mode]\n  )\n\n  return (\n    <ThemedGlobalStyle frameBgColor={itemColor} headerLogo={headerLogo} navLogo={navLogo} animation={showAnimation} />\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { devLog } from 'utils/logging'\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\ndeclare global {\n  interface Window {\n    swNeedUpdate: boolean\n  }\n}\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nconst SWHelper = {\n  async getWaitingWorker() {\n    const registrations = (await navigator?.serviceWorker?.getRegistrations()) || []\n    const registrationWithWaiting = registrations.find(reg => reg.waiting)\n    return registrationWithWaiting?.waiting\n  },\n\n  async skipWaiting() {\n    return (await SWHelper.getWaitingWorker())?.postMessage({ type: 'SKIP_WAITING_WHEN_SOLO' })\n  },\n\n  async prepareCachesForUpdate() {\n    devLog('[worker] prepareCachesForUpdate')\n    return (await SWHelper.getWaitingWorker())?.postMessage({ type: 'PREPARE_CACHES_FOR_UPDATE' })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      if (registration.waiting && registration.active) {\n        devLog('[worker] Needs update (waiting & active)')\n        window.swNeedUpdate = true\n      }\n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              devLog('[worker] Needs update (installed)')\n              window.swNeedUpdate = true\n\n              SWHelper.prepareCachesForUpdate().then()\n\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              devLog(\n                '[worker] New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              devLog('[worker] Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('[worker] Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      devLog('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          devLog(\n            '[worker] This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n\n    window.addEventListener('beforeunload', async () => {\n      if (window.swNeedUpdate) {\n        await SWHelper.skipWaiting()\n      }\n    })\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","/* eslint-disable prefer-rest-params */\nexport function nodeRemoveChildFix() {\n  if (typeof Node === 'function' && Node.prototype) {\n    const originalRemoveChild = Node.prototype.removeChild\n    Node.prototype.removeChild = function<T extends Node>(child: T): T {\n      if (child.parentNode !== this) {\n        if (console) {\n          console.error('Cannot remove a child from a different parent', child, this)\n        }\n        return child\n      }\n      return originalRemoveChild.apply(this, arguments as any) as T\n    }\n\n    const originalInsertBefore = Node.prototype.insertBefore\n    Node.prototype.insertBefore = function<T extends Node>(newNode: T, referenceNode: Node | null): T {\n      if (referenceNode && referenceNode.parentNode !== this) {\n        if (console) {\n          console.error('Cannot insert before a reference node from a different parent', referenceNode, this)\n        }\n        return newNode\n      }\n      return originalInsertBefore.apply(this, arguments as any) as T\n    }\n  }\n}\n","import 'inter-ui'\nimport './i18n'\n\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\n\nimport { StrictMode } from 'react'\n// PROVIDERS\nimport { Provider } from 'react-redux'\nimport ApolloProvider from 'shopify/graphql/ApolloProvider'\nimport ThemeProvider from 'theme'\n\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\n\nimport { NetworkContextName } from 'blockchain/constants'\nimport getLibrary from 'blockchain/utils/getLibrary'\n\nimport App from './pages/App'\n\nimport store from 'state'\nimport BlockchainUpdater from 'state/blockchain/updater'\nimport TransactionUpdater from 'state/transactions/updater'\nimport UserUpdater from 'state/user/updater'\nimport CatalogUpdater from 'state/catalog/updater'\n\nimport { TopGlobalStyle, ThemedGlobalComponent, FontStyles } from 'theme/styles/global'\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport { nodeRemoveChildFix } from 'utils/node'\nimport { devLog } from 'utils/logging'\n\n// Node removeChild hackaround\n// based on: https://github.com/facebook/react/issues/11538#issuecomment-417504600\nnodeRemoveChildFix()\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\nif (!!window.ethereum) {\n  window.ethereum.autoRefreshOnNetworkChange = false\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <UserUpdater />\n      <BlockchainUpdater />\n      <TransactionUpdater />\n      <CatalogUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <StrictMode>\n    {/* Provides all top level CSS NOT dynamically adjustable by the ThemeProvider */}\n    <FontStyles />\n    <TopGlobalStyle />\n    <ApolloProvider>\n      <Provider store={store}>\n        <HashRouter>\n          <Web3ReactProvider getLibrary={getLibrary}>\n            <Web3ProviderNetwork getLibrary={getLibrary}>\n              <Updaters />\n              <ThemeProvider>\n                {/* Provides all top level CSS dynamically adjustable by the ThemeProvider */}\n                <ThemedGlobalComponent />\n                <App />\n              </ThemeProvider>\n            </Web3ProviderNetwork>\n          </Web3ReactProvider>\n        </HashRouter>\n      </Provider>\n    </ApolloProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n\nasync function deleteAllCaches() {\n  const cacheNames = (await caches.keys()) || []\n\n  cacheNames.map(cacheName => {\n    devLog('[worker] Delete cache', cacheName)\n    // Delete old caches\n    // https://developers.google.com/web/ilt/pwa/caching-files-with-service-worker#removing_outdated_caches\n    return caches.delete(cacheName)\n  })\n}\n\nasync function unregisterAllWorkers() {\n  navigator.serviceWorker.getRegistrations().then(function(registrations) {\n    for (const registration of registrations) {\n      registration.unregister()\n    }\n  })\n}\n\nif ('serviceWorker' in navigator) {\n  devLog('[worker] Unregister worker...')\n  serviceWorkerRegistration.unregister()\n\n  devLog('[worker] Deleting all caches...')\n  deleteAllCaches()\n    .then(() => devLog('[worker] All caches have been deleted'))\n    .catch(console.error)\n\n  devLog('[worker] Unregistering all workers...')\n  unregisterAllWorkers()\n    .then(() => devLog('[worker] All workers have been unregistered'))\n    .catch(console.error)\n}\n","export type Color = string\nexport interface Colors {\n  // base\n  white: Color\n  black: Color\n\n  // text\n  text1: Color\n  text2: Color\n  text3: Color\n  text4: Color\n  text5: Color\n  textDisabled: Color\n\n  // backgrounds / greys\n  bg1: Color\n  bg2: Color\n  bg3: Color\n  bg4: Color\n  bg5: Color\n  bgDisabled: Color\n\n  modalBG: Color\n  advancedBG: Color\n\n  //blues\n  primary1: Color\n  primary2: Color\n  primary3: Color\n  primary4: Color\n  primary5: Color\n\n  primaryText1: Color\n\n  // pinks\n  secondary1: Color\n  secondary2: Color\n  secondary3: Color\n\n  // other\n  red1: Color\n  red2: Color\n  green1: Color\n  green2: Color\n  yellow1: Color\n  yellow2: Color\n  blue1: Color\n}\n\nexport enum ThemeModes {\n  LIGHT = 'LIGHT',\n  DARK = 'DARK',\n  // add whatever themes u want here...\n  VAMPIRE = 'VAMPIRE',\n  CHAMELEON = 'CHAMELEON'\n}\n\nexport type Theme = {\n  mode: ThemeModes\n  autoDetect: boolean\n}\n\nexport const THEME_LIST = Object.entries(ThemeModes)\n\ndeclare module 'styled-components' {\n  export interface DefaultTheme extends Colors {\n    // theming\n    mode: ThemeModes\n    buttons: {\n      font: {\n        size: {\n          small: string\n          normal: string\n          large: string\n        }\n      }\n      borderRadius: string\n      border: string\n    }\n    // shadows\n    shadow1: string\n\n    // media queries\n    mediaWidth: {\n      upToExtraSmall: ThemedCssFunction<DefaultTheme>\n      upToSmall: ThemedCssFunction<DefaultTheme>\n      upToMedium: ThemedCssFunction<DefaultTheme>\n      upToLarge: ThemedCssFunction<DefaultTheme>\n    }\n\n    // css snippets\n    flexColumnNoWrap: FlattenSimpleInterpolation\n    flexRowNoWrap: FlattenSimpleInterpolation\n  }\n}\n","// Curried fn base\n// Logs a choice from LogType in any env except Production. Else noop\ntype LogType = keyof Pick<Console, 'debug' | 'log' | 'error' | 'warn' | 'info'>\nexport const devConsole = (type: LogType) => (...args: any[]) => {\n  if (process.env.NODE_ENV !== 'production') {\n    return console[type](...args)\n  }\n}\n\nexport const devLog = devConsole('log')\nexport const devWarn = devConsole('warn')\nexport const devInfo = devConsole('info')\nexport const devError = devConsole('error')\nexport const devDebug = devConsole('debug')\n","import { HTMLProps, useCallback } from 'react'\nimport ReactGA from 'react-ga'\nimport { Link } from 'react-router-dom'\nimport styled, { keyframes } from 'styled-components/macro'\nimport { darken } from 'polished'\nimport { ArrowLeft, X } from 'react-feather'\nimport { devDebug } from 'utils/logging'\n\nexport const Button = styled.button.attrs<{ warning: boolean }, { backgroundColor: string }>(({ warning, theme }) => ({\n  backgroundColor: warning ? theme.red1 : theme.primary1\n}))`\n  padding: 1rem 2rem 1rem 2rem;\n  border-radius: 3rem;\n  cursor: pointer;\n  user-select: none;\n  font-size: 1rem;\n  border: none;\n  outline: none;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  color: ${({ theme }) => theme.white};\n  width: 100%;\n\n  :hover,\n  :focus {\n    background-color: ${({ backgroundColor }) => darken(0.05, backgroundColor)};\n  }\n\n  :active {\n    background-color: ${({ backgroundColor }) => darken(0.1, backgroundColor)};\n  }\n\n  :disabled {\n    background-color: ${({ theme }) => theme.bg1};\n    color: ${({ theme }) => theme.text4};\n    cursor: auto;\n  }\n`\n\nexport const CloseIcon = styled(X)<{ onClick: () => void }>`\n  cursor: pointer;\n`\n\n// A button that triggers some onClick result, but looks like a link.\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\n  border: none;\n  text-decoration: none;\n  background: none;\n\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n  color: ${({ theme, disabled }) => (disabled ? theme.text2 : theme.primary1)};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n// An internal link from the react-router-dom library that is correctly styled\nexport const StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nconst rotateImg = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`\n\nexport const UniTokenAnimated = styled.img`\n  animation: ${rotateImg} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n  padding: 2rem 0 0 0;\n  filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.15));\n`\n\n/**\n * Outbound link that handles firing google analytics events\n */\nexport function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      // don't prevent default, don't redirect if it's a new tab\n      if (target === '_blank' || event.ctrlKey || event.metaKey) {\n        ReactGA.outboundLink({ label: href }, () => {\n          devDebug('Fired outbound link event', href)\n        })\n      } else {\n        event.preventDefault()\n        // send a ReactGA event and then trigger a location change\n        ReactGA.outboundLink({ label: href }, () => {\n          window.location.href = href\n        })\n      }\n    },\n    [href, target]\n  )\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`\n\nconst BackArrowLink = styled(StyledInternalLink)`\n  color: ${({ theme }) => theme.text1};\n`\nexport function BackArrow({ to }: { to: string }) {\n  return (\n    <BackArrowLink to={to}>\n      <ArrowLeft />\n    </BackArrowLink>\n  )\n}\n\nexport const CustomLightSpinner = styled(Spinner)<{ size: string }>`\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n`\n\nexport const HideSmall = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`\n","import { ReactElement, FC, useMemo, Children, isValidElement, cloneElement } from 'react'\nimport styled, { ThemeProvider as StyledComponentsThemeProvider, css, DefaultTheme } from 'styled-components/macro'\n\nimport { Text, TextProps } from 'rebass'\nimport { useAppColourTheme } from 'state/user/hooks'\nimport { ThemeModes, Colors } from './styled'\nimport { getThemeColours } from './utils'\nimport { mediaWidthTemplates as mediaWidth } from './styles/mediaQueries'\n\nexport * from './components'\n\nconst TextWrapper = styled(Text)<{ color: keyof Colors }>`\n  color: ${({ color, theme }): string => (theme as never)[color]};\n`\n\nexport const TYPE = {\n  main(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} color=\"text2\" {...props} />\n  },\n  link(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} color=\"primary1\" {...props} />\n  },\n  black(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} color=\"black\" {...props} />\n  },\n  white(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} color=\"white\" {...props} />\n  },\n  body(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={400} fontSize={16} color=\"text1\" {...props} />\n  },\n  largeHeader(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={600} fontSize={24} {...props} />\n  },\n  mediumHeader(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} fontSize={20} {...props} />\n  },\n  subHeader(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={400} fontSize={14} {...props} />\n  },\n  small(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} fontSize={11} {...props} />\n  },\n  blue(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} color=\"primary1\" {...props} />\n  },\n  yellow(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} color=\"yellow1\" {...props} />\n  },\n  darkGray(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} color=\"text3\" {...props} />\n  },\n  gray(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} color=\"bg3\" {...props} />\n  },\n  italic(props: TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} fontSize={12} fontStyle={'italic'} color=\"text2\" {...props} />\n  },\n  error({ error, ...props }: { error: boolean } & TextProps): ReactElement {\n    return <TextWrapper fontWeight={500} color={error ? 'red1' : 'text2'} {...props} />\n  }\n}\n\nconst DEFAULT_THEME: Partial<DefaultTheme> = {\n  buttons: {\n    font: {\n      size: {\n        small: '10px',\n        normal: '12px',\n        large: '16px'\n      }\n    },\n    borderRadius: '16px',\n    border: '0.1rem solid transparent'\n  },\n  // media queries\n  mediaWidth,\n  // css snippets\n  // can be used in components\n  // like: ${({ theme }) => theme.flexColumnNoWrap}\n  flexColumnNoWrap: css`\n    display: flex;\n    flex-flow: column nowrap;\n  `,\n  flexRowNoWrap: css`\n    display: flex;\n    flex-flow: row nowrap;\n  `\n}\n\n// Extension/override of styled-components' ThemeProvider but with our own constructed theme object\nconst ThemeProvider: FC<{ themeExtension?: any }> = ({ children, themeExtension }) => {\n  const { mode } = useAppColourTheme()\n\n  const themeObject = useMemo(() => {\n    const themeColours = getThemeColours(mode)\n\n    const computedTheme = {\n      // Compute the app colour pallette using the passed in colourTheme\n      ...themeColours,\n      // pass in defaults\n      ...DEFAULT_THEME,\n      mode,\n      //shadows\n      shadow1: mode === ThemeModes.DARK ? '#000' : '#2F80ED',\n      // unfold in any extensions\n      // for example to make big/small buttons -> see src/components/Button ThemeWrappedButtonBase\n      // to see it in action\n      ...themeExtension\n    }\n\n    return computedTheme\n  }, [mode, themeExtension])\n\n  return (\n    <StyledComponentsThemeProvider theme={themeObject}>\n      {Children.map(\n        children,\n        childWithTheme =>\n          // make sure child is a valid react element as children by default can be type string|null|number\n          isValidElement(childWithTheme) && cloneElement(childWithTheme, { theme: themeObject })\n      )}\n    </StyledComponentsThemeProvider>\n  )\n}\n\nexport default ThemeProvider\n","import { createSlice, nanoid, PayloadAction } from '@reduxjs/toolkit'\n\nexport type PopupContent = React.ReactNode\n\nexport enum ApplicationModal {\n  WALLET,\n  SETTINGS,\n  MENU,\n  ITEM_LARGE_IMAGE\n}\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  readonly popupList: PopupList\n  readonly openModal: ApplicationModal | null\n}\n\nconst initialState: ApplicationState = {\n  popupList: [],\n  openModal: null\n}\n\nconst applicationSlice = createSlice({\n  name: 'application',\n  initialState,\n  reducers: {\n    setOpenModal(state, action: PayloadAction<ApplicationModal | null>) {\n      state.openModal = action.payload\n    },\n    addPopup(\n      state,\n      {\n        payload: { content, key, removeAfterMs = 15000 }\n      }: PayloadAction<{ content: PopupContent; key?: string; removeAfterMs?: number }>\n    ) {\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs\n        }\n      ])\n    },\n    removePopup(state, { payload: key }: PayloadAction<string>) {\n      state.popupList.forEach(p => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    }\n  }\n})\n\nexport const { setOpenModal, addPopup, removePopup } = applicationSlice.actions\nexport const application = applicationSlice.reducer\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { AppDispatch, AppState } from 'state'\nimport { Theme, ThemeModes } from 'theme/styled'\nimport { setOnScreenItemID, updateThemeAutoDetect, updateThemeMode } from './reducer'\nimport { initialState } from './reducer'\n\nexport const useAppColourTheme = () => useSelector<AppState, Theme>(({ user }) => user.theme || initialState.theme)\n\ninterface ThemeManager {\n  theme: Theme\n  setMode: (mode: ThemeModes) => void\n  setAutoDetect: (autoDetect: boolean) => void\n}\n\nexport function useThemeManager(): ThemeManager {\n  const dispatch = useDispatch<AppDispatch>()\n  const theme = useAppColourTheme()\n\n  const setMode = useCallback(\n    (mode: ThemeModes) => {\n      dispatch(updateThemeMode(mode))\n    },\n    [dispatch]\n  )\n\n  const setAutoDetect = useCallback(\n    (autoDetect: boolean) => {\n      dispatch(updateThemeAutoDetect(autoDetect))\n    },\n    [dispatch]\n  )\n\n  return { theme, setMode, setAutoDetect }\n}\n\nexport function useSetOnScreenItemID() {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback((params: string) => dispatch(setOnScreenItemID(params)), [dispatch])\n}\nexport const useOnScreenItemID = () => useSelector<AppState, string | null>(({ user }) => user.onScreenItemID)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Theme, ThemeModes } from 'theme/styled'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  theme: Theme\n  // timestamp: number\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n  // key string of current on screen item\n  onScreenItemID: string | null\n}\n\nexport const initialState: UserState = {\n  theme: {\n    mode: ThemeModes.CHAMELEON,\n    autoDetect: false\n  },\n  // timestamp: currentTimestamp(),\n  onScreenItemID: null\n}\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    updateVersion(state) {\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    },\n    updateThemeMode(state, action: PayloadAction<ThemeModes>) {\n      state.theme.mode = action.payload\n      // state.timestamp = currentTimestamp()\n    },\n    updateThemeAutoDetect(state, action: PayloadAction<boolean>) {\n      state.theme.autoDetect = action.payload\n      // state.timestamp = currentTimestamp()\n    },\n    setOnScreenItemID(state, action: PayloadAction<string | null>) {\n      state.onScreenItemID = action.payload\n      // state.timestamp = currentTimestamp()\n    }\n  }\n})\nexport const { updateThemeAutoDetect, updateThemeMode, setOnScreenItemID } = userSlice.actions\nexport const user = userSlice.reducer\n","import { CatalogSeason, ItemSizes } from 'mock/types'\n\nexport const CURRENT_YEAR = new Date().getFullYear()\nexport const CURRENT_SEASON: CatalogSeason = 'FALL'\n\nexport const SEASONS: CatalogSeason[] = ['WINTER', 'SPRING', 'SUMMER', 'FALL']\nexport const STORE_IMAGE_SIZES = {\n  LARGE: 2000,\n  SMALL: 600\n}\nexport const SHIRT_SIZES: ItemSizes[] = ['X-LARGE', 'LARGE', 'MEDIUM', 'SMALL']\nexport const CATALOG_MAX_WIDTH = 1700\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface BlockchainState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n  readonly chainId: number | null\n  readonly chainConnectivityWarning: boolean\n  readonly implements3085: boolean\n}\n\nexport type BlockNumberState = {\n  chainId: number\n  blockNumber: number\n}\n\nconst initialState: BlockchainState = {\n  blockNumber: {},\n  chainId: null,\n  chainConnectivityWarning: false,\n  implements3085: false\n}\n\nconst blockchainSlice = createSlice({\n  name: 'blockchain',\n  initialState,\n  reducers: {\n    updateChainId(state, action: PayloadAction<number | null>) {\n      state.chainId = action.payload\n    },\n    updateBlockNumber(state, { payload: { chainId, blockNumber } }: PayloadAction<BlockNumberState>) {\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    },\n    setImplements3085(state, action: PayloadAction<boolean>) {\n      state.implements3085 = action.payload\n    },\n    setChainConnectivityWarning(state, action: PayloadAction<boolean>) {\n      state.chainConnectivityWarning = action.payload\n    }\n  }\n})\n\nexport const {\n  updateBlockNumber,\n  updateChainId,\n  setChainConnectivityWarning,\n  setImplements3085\n} = blockchainSlice.actions\nexport const blockchain = blockchainSlice.reducer\n","import styled from 'styled-components/macro'\nimport { Box } from 'rebass/styled-components'\n\nexport const Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: ${({ align = 'center' }) => align};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n","import styled from 'styled-components/macro'\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n","import styled from 'styled-components/macro'\nimport { CardProps, Text } from 'rebass'\nimport { Box } from 'rebass/styled-components'\n\nconst Card = styled(Box)<{ padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  border-radius: 1.6rem;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.bg2};\n  background-color: ${({ theme }) => theme.bg1};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nexport const OutlineCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.bg3};\n`\n\nexport const YellowCard = styled(Card)`\n  background-color: rgba(243, 132, 30, 0.05);\n  color: ${({ theme }) => theme.yellow2};\n  font-weight: 500;\n`\n\nexport const PinkCard = styled(Card)`\n  background-color: rgba(255, 0, 122, 0.03);\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n`\n\nconst BlueCardStyled = styled(Card)`\n  background-color: ${({ theme }) => theme.primary5};\n  color: ${({ theme }) => theme.primary1};\n  border-radius: 12px;\n  width: fit-content;\n`\n\nexport const BlueCard = ({ children, ...rest }: CardProps) => {\n  return (\n    <BlueCardStyled {...rest}>\n      <Text fontWeight={500} color=\"#2172E5\">\n        {children}\n      </Text>\n    </BlueCardStyled>\n  )\n}\n","export const DEFAULT_COLOURS = {\n  // base\n  black: '#000',\n  // off white\n  white: '#e5e5e5',\n  whiteDark: '#e9e9f0',\n  red1: '#FF6871',\n  red2: '#200202',\n  green1: '#09371d',\n  green2: '#a9ffcd',\n  yellow1: '#FFE270',\n  yellow2: '#F3841E',\n  blue1: '#2172E5',\n  blue: '#3F77FF',\n  blueDark: '#185afb',\n  purple: '#8958FF',\n  bgLight: '#edf2f7',\n  bgDark: 'linear-gradient(0deg, #21222E 0.05%, #2C2D3F 100%)',\n  blackLight: '#181a1b',\n  successLight: '#5ca95c',\n  successDark: '#00BE2E',\n  dangerLight: '#e55353',\n  dangerDark: '#eb4025',\n  warningLight: '#f1851d',\n  warningDark: '#f1851d',\n  bgDisabled: '#8a8a8a80',\n  disabledDarkOpaque: '#ffffff80',\n  textDisabled: '#31323E',\n  disabledDark: '#31323E',\n  mainGradient: 'linear-gradient(270deg, #8958FF 0%, #3F77FF 100%)',\n  mainGradientDarker: 'linear-gradient(270deg, #6a2cff 0%, #185afb 100%)'\n}\nexport const LIGHT_COLOURS = {\n  // text\n  text1: '#000000',\n  text2: '#565A69',\n  text3: '#888D9B',\n  text4: '#C3C5CB',\n  text5: '#EDEEF2',\n\n  // backgrounds / greys\n  bg1: '#ffc1ff',\n  bg2: '#F7F8FA',\n  bg3: '#C1FFC1',\n  bg4: '#00a400',\n  bg5: '#888D9B',\n\n  //specialty colors\n  modalBG: 'rgba(0,0,0,0.3)',\n  advancedBG: 'rgba(255,255,255,0.6)',\n\n  //primary colors\n  primary1: '#ff007a',\n  primary2: '#FF8CC3',\n  primary3: '#FF99C9',\n  primary4: '#F6DDE8',\n  primary5: '#FDEAF1',\n\n  // color text\n  primaryText1: '#ff007a',\n\n  // secondary colors\n  secondary1: '#ff007a',\n  secondary2: '#F6DDE8',\n  secondary3: '#FDEAF1'\n}\n\nexport const DARK_COLOURS = {\n  // text\n  text1: '#FFFFFF',\n  text2: '#C3C5CB',\n  text3: '#6C7284',\n  text4: '#565A69',\n  text5: '#2C2F36',\n\n  // backgrounds / greys\n  bg1: '#212429',\n  bg2: '#2C2F36',\n  bg3: '#40444F',\n  bg4: '#565A69',\n  bg5: '#6C7284',\n\n  //specialty colors\n  modalBG: 'rgba(0,0,0,.425)',\n  advancedBG: 'rgba(0,0,0,0.1)',\n\n  //primary colors\n  primary1: '#2172E5',\n  primary2: '#3680E7',\n  primary3: '#4D8FEA',\n  primary4: '#376bad70',\n  primary5: '#153d6f70',\n\n  // color text\n  primaryText1: '#6da8ff',\n\n  // secondary colors\n  secondary1: '#2172E5',\n  secondary2: '#17000b26',\n  secondary3: '#17000b26'\n}\n\nexport const VAMPIRE_COLOURS = {\n  ...DARK_COLOURS,\n  bg1: DEFAULT_COLOURS.red2\n}\n\nexport const CHAMELEON_COLOURS = {\n  ...DARK_COLOURS,\n  bg1: 'lightblue'\n}\n","import { DefaultTheme, FlattenSimpleInterpolation, css } from 'styled-components/macro'\n\nimport { LIGHT_COLOURS, DARK_COLOURS, DEFAULT_COLOURS, VAMPIRE_COLOURS, CHAMELEON_COLOURS } from './styles'\nimport { ThemeModes, Colors } from './styled'\n\nexport function getThemeColours(colourTheme: ThemeModes): Colors {\n  let THEME_COLOURS = LIGHT_COLOURS\n\n  switch (colourTheme) {\n    case ThemeModes.LIGHT:\n      THEME_COLOURS = LIGHT_COLOURS\n      break\n    case ThemeModes.DARK:\n      THEME_COLOURS = DARK_COLOURS\n      break\n    case ThemeModes.VAMPIRE:\n      THEME_COLOURS = VAMPIRE_COLOURS\n      break\n    case ThemeModes.CHAMELEON:\n      THEME_COLOURS = CHAMELEON_COLOURS\n      break\n  }\n  return {\n    ...DEFAULT_COLOURS,\n    ...THEME_COLOURS\n  }\n}\n\ninterface ThemeProps {\n  theme: DefaultTheme\n}\n\nexport const setBgColour = (themeColour: keyof Colors) => ({ theme }: ThemeProps): FlattenSimpleInterpolation =>\n  css`\n    background-color: ${theme[themeColour]};\n  `\n\nexport const setTextColour = (themeColour: keyof Colors) => ({ theme }: ThemeProps): FlattenSimpleInterpolation =>\n  css`\n    color: ${theme[themeColour]};\n  `\n","import { gql } from '@apollo/client'\n\nexport const FRAGMENT_PRODUCT_IMAGE = gql`\n  fragment FragmentProductImage on Image {\n    id\n    url\n    altText\n    width\n    height\n  }\n`\n\nexport const FRAGMENT_PRODUCT_VIDEO = gql`\n  fragment FragmentProductVideo on Video {\n    id\n    mediaContentType\n    previewImage {\n      url\n      width\n      height\n    }\n    sources {\n      mimeType\n      url\n    }\n  }\n`\n\nexport const FRAGMENT_PRODUCT_EXTERNAL_VIDEO = gql`\n  fragment FragmentProductExternalVideo on ExternalVideo {\n    mediaContentType\n    id\n    embedUrl\n    host\n  }\n`\n\n/* export const FRAGMENT_PRODUCT = gql`\n  ${FRAGMENT_PRODUCT_IMAGE}\n  ${FRAGMENT_PRODUCT_VIDEO}\n  ${FRAGMENT_PRODUCT_EXTERNAL_VIDEO}\n  fragment FragmentProduct on Product($imageAmt: Int) {\n    id\n    title\n    description\n    descriptionHtml\n    sizes: options {\n      values\n    }\n    updatedAt\n    featuredImage {\n      url\n    }\n    images(first: $imageAmt) {\n      nodes {\n        ...FragmentProductImage\n      }\n    }\n    media(first: $imageAmt, reverse: true) {\n      nodes {\n        ...FragmentProductVideo\n        ...FragmentProductExternalVideo\n      }\n    }\n\n    videos: metafield(namespace: \"custom\", key: \"videos\") {\n      value\n    }\n    color: metafield(namespace: \"custom\", key: \"color\") {\n      value\n    }\n    artistInfo: metafield(namespace: \"custom\", key: \"artistInfo\") {\n      value\n    }\n  }\n` */\n","import { gql } from '@apollo/client'\nimport { FRAGMENT_PRODUCT_IMAGE, FRAGMENT_PRODUCT_VIDEO } from '../fragments'\n\nexport const QUERY_GET_COLLECTION = gql`\n  ${FRAGMENT_PRODUCT_IMAGE}\n  ${FRAGMENT_PRODUCT_VIDEO}\n  query getCollection($collectionAmount: Int, $productAmt: Int, $imageAmt: Int) {\n    collections(first: $collectionAmount) {\n      nodes {\n        id\n        handle\n        image {\n          url\n        }\n        products(first: $productAmt) {\n          nodes {\n            id\n            updatedAt\n            title\n            description\n            descriptionHtml\n            sizes: options {\n              values\n            }\n            featuredImage {\n              url\n              width\n              height\n            }\n            images(first: $imageAmt) {\n              nodes {\n                ...FragmentProductImage\n              }\n            }\n            media(first: $imageAmt, reverse: true) {\n              nodes {\n                ...FragmentProductVideo\n              }\n            }\n            brandingAssetMap: metafield(namespace: \"custom\", key: \"brandingassetmap\") {\n              value\n            }\n            color: metafield(namespace: \"custom\", key: \"color\") {\n              value\n            }\n            artistInfo: metafield(namespace: \"custom\", key: \"artistInfo\") {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { ProductPageProps } from 'pages/SingleItem/AsideWithVideo'\nimport {\n  FragmentProductVideoFragment,\n  ProductArtistInfo,\n  ProductBrandingAssets,\n  ProductSizes,\n  ProductsList\n} from 'shopify/graphql/types'\n\nexport function isJson(str: any) {\n  if (typeof str === undefined || typeof str !== 'string') {\n    return false\n  }\n\n  try {\n    JSON.parse(str)\n  } catch (e) {\n    return false\n  }\n  return true\n}\n\nexport function getMetafields(query: any) {\n  const test = query?.value || query\n  if (isJson(test)) {\n    return JSON.parse(test)\n  } else {\n    return test\n  }\n}\n\nexport const mapShopifyProductToProps = (data: ProductsList = []): ProductPageProps[] => {\n  return data.map(datum => {\n    const brandingAssetsMap = getMetafields(datum.brandingAssetMap) as ProductBrandingAssets | undefined\n\n    return {\n      id: datum.id,\n      title: datum.title,\n      // TODO: fix\n      logo: brandingAssetsMap?.logo,\n      headerLogo: brandingAssetsMap?.header,\n      navLogo: brandingAssetsMap?.navBar,\n      description: datum.descriptionHtml,\n      // metafields\n      color: getMetafields(datum.color)?.toString() as string,\n      artistInfo: getMetafields(datum.artistInfo) as ProductArtistInfo,\n      // TODO: fix\n      images: datum.images.nodes.slice(0, 2),\n      // @ts-ignore - type\n      videos: datum.media.nodes.filter(media => media?.__typename === 'Video') as FragmentProductVideoFragment[],\n      sizes: getMetafields(datum.sizes[0].values) as ProductSizes[]\n    }\n  })\n}\n","import { useEffect, useMemo } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport { CatalogItem } from 'mock/types'\n\nimport { CATALOG_URL } from 'constants/navigation'\nimport { useQuery } from '@apollo/client'\nimport { QUERY_GET_COLLECTION } from 'shopify/graphql/queries/collections'\nimport { GetCollectionQuery, GetCollectionQueryVariables } from 'shopify/graphql/types'\nimport { mapShopifyProductToProps } from 'shopify/utils'\nimport { ProductPageProps } from 'pages/SingleItem/AsideWithVideo'\n\ntype URLFromCatalogItemsParams = {\n  products: CatalogItem[]\n  currentProduct: CatalogItem | undefined\n  isActive: boolean\n  id: string\n  index: number\n}\n\nexport function useUpdateURLFromCatalogItem(params: URLFromCatalogItemsParams) {\n  const { products, currentProduct, isActive, id, index } = params\n  const { replace } = useHistory()\n  // update url\n  useEffect(() => {\n    const urlNeedsUpdate = isActive && currentProduct?.id !== id\n\n    if (urlNeedsUpdate) {\n      const currentItemKey = products[index]?.id\n      if (!currentItemKey) return\n\n      replace(CATALOG_URL + currentItemKey.split('-')[0])\n    }\n  }, [currentProduct?.id, isActive, id, index, replace, products])\n}\n\nexport function useGetCatalogDetailsFromURL(): [string, string[]] {\n  const { pathname } = useLocation()\n\n  return useMemo(\n    () => [\n      pathname,\n      pathname\n        .substring(1)\n        .split('/')\n        .slice(1)\n    ],\n    [pathname]\n  )\n}\n\nexport function useCollections(variables: GetCollectionQueryVariables) {\n  return useQuery<GetCollectionQuery, GetCollectionQueryVariables>(QUERY_GET_COLLECTION, {\n    variables\n  })\n}\n\nexport const DEFAULT_CURRENT_COLLECTION_VARIABLES = {\n  collectionAmount: 1,\n  productAmt: 10,\n  imageAmt: 20\n}\n\nexport function useCurrentCollectionProducts(\n  variables: GetCollectionQueryVariables = DEFAULT_CURRENT_COLLECTION_VARIABLES\n) {\n  const { data, error } = useCollections(variables)\n\n  // TODO: fix\n  if (error) {\n    console.error(error)\n  }\n\n  // collection\n  const collection = data?.collections?.nodes[0]\n  // products from collection\n  const products = mapShopifyProductToProps(collection?.products.nodes)\n  // [PRODUCT_NAME]: PRODUCT\n  const productsMap = products.reduce((acc, prod: ProductPageProps) => {\n    acc[prod.title] = prod\n\n    return acc\n  }, {} as Record<string, ProductPageProps>)\n\n  return { productsMap, productsList: products }\n}\n\nexport function useCurrentCollectionProductsFromUrl(\n  variables: GetCollectionQueryVariables = DEFAULT_CURRENT_COLLECTION_VARIABLES\n) {\n  // we need to use the URL to determine what item we're currently viewing\n  const [pathname, [, , item = '']] = useGetCatalogDetailsFromURL()\n\n  const { productsMap, productsList } = useCurrentCollectionProducts(variables)\n\n  const urlItem = productsMap[item]\n  const currentProduct = urlItem || productsList[0]\n\n  return {\n    products: productsList,\n    currentProduct,\n    pathname\n  }\n}\n"],"sourceRoot":""}