{"version":3,"sources":["components/Popups/PopupItem.tsx","components/Popups/index.tsx"],"names":["StyledClose","styled","X","Popup","div","theme","bg1","mediaWidth","upToSmall","Fader","bg3","AnimatedFader","animated","PopupItem","removeAfterMs","popKey","removePopup","useRemovePopup","removeThisPopup","useCallback","useEffect","timeout","setTimeout","clearTimeout","useContext","ThemeContext","faderStyle","useSpring","from","width","to","config","duration","undefined","color","text2","onClick","popupContent","style","MobilePopupWrapper","height","MobilePopupInner","FixedPopupColumn","AutoColumn","extraPadding","Popups","activePopups","useActivePopups","gap","map","item","content","key","length","slice","reverse"],"mappings":"6NAQaA,EAAcC,kBAAOC,KAAV,wCAAGD,CAAH,mEASXE,EAAQF,UAAOG,IAAV,wCAAGH,CAAH,+JAII,qBAAGI,MAAkBC,OAOvC,qBAAGD,MAAkBE,WAAWC,UAA/B,IAAD,kHAOEC,EAAQR,UAAOG,IAAV,wCAAGH,CAAH,uFAMW,qBAAGI,MAAkBK,OAGrCC,EAAgBC,mBAASH,GAEhB,SAASI,EAAT,GAQX,IAPFC,EAOC,EAPDA,cAEAC,EAKC,EALDA,OAMMC,EAAcC,cACdC,EAAkBC,uBAAY,kBAAMH,EAAYD,KAAS,CAACA,EAAQC,IACxEI,qBAAU,WACR,GAAsB,OAAlBN,EAAJ,CAEA,IAAMO,EAAUC,YAAW,WACzBJ,MACCJ,GAEH,OAAO,WACLS,aAAaF,OAEd,CAACP,EAAeI,IAEnB,IAAMb,EAAQmB,qBAAWC,gBAInBC,EAAaC,oBAAU,CAC3BC,KAAM,CAAEC,MAAO,QACfC,GAAI,CAAED,MAAO,MACbE,OAAQ,CAAEC,SAAQ,OAAElB,QAAF,IAAEA,SAAiBmB,KAGvC,OACE,eAAC9B,EAAD,WACE,cAACH,EAAD,CAAakC,MAAO7B,EAAM8B,MAAOC,QAASlB,IAV1CmB,UAYmB,OAAlBvB,EAAyB,cAACH,EAAD,CAAe2B,MAAOZ,IAAiB,QC9EvE,IAAMa,EAAqBtC,UAAOG,IAAV,wCAAGH,CAAH,iGAGZ,qBAAGuC,UACH,qBAAGA,OAAuB,UAAY,KAC/B,qBAAGA,OAAuB,OAAS,KAGlD,qBAAGnC,MAAkBE,WAAWC,UAA/B,MAAD,gDAKEiC,EAAmBxC,UAAOG,IAAV,wCAAGH,CAAH,sJAYhByC,EAAmBzC,kBAAO0C,KAAV,wCAAG1C,CAAH,4FAEb,qBAAG2C,aAAmC,QAAU,UAMrD,qBAAGvC,MAAkBE,WAAWC,UAA/B,IAAD,iDAKW,SAASqC,IAEtB,IAAMC,EAAeC,cAErB,OACE,qCACE,cAACL,EAAD,CAAkBM,IAAI,OAAOJ,cAAY,EAAzC,SACGE,EAAaG,KAAI,SAAAC,GAAI,OACpB,cAACrC,EAAD,CAA0BsC,QAASD,EAAKC,QAASpC,OAAQmC,EAAKE,IAAKtC,cAAeoC,EAAKpC,eAAvEoC,EAAKE,UAGzB,cAACb,EAAD,CAAoBC,QAAoB,OAAZM,QAAY,IAAZA,OAAA,EAAAA,EAAcO,QAAS,EAAI,cAAgB,EAAvE,SACE,cAACZ,EAAD,UACGK,EACEQ,MAAM,GACNC,UACAN,KAAI,SAAAC,GAAI,OACP,cAACrC,EAAD,CAA0BsC,QAASD,EAAKC,QAASpC,OAAQmC,EAAKE,IAAKtC,cAAeoC,EAAKpC,eAAvEoC,EAAKE","file":"static/js/POPUPS.8d82576f.chunk.js","sourcesContent":["import { useCallback, useContext, useEffect } from 'react'\nimport { X } from 'react-feather'\nimport { useSpring } from 'react-spring'\nimport styled, { ThemeContext } from 'styled-components/macro'\nimport { animated } from 'react-spring'\nimport { PopupContent } from 'state/application/reducer'\nimport { useRemovePopup } from 'state/application/hooks'\n\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({ theme }) => theme.bg1};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    min-width: 290px;\n    &:not(:last-of-type) {\n      margin-right: 20px;\n    }\n  `}\n`\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nconst AnimatedFader = animated(Fader)\n\nexport default function PopupItem({\n  removeAfterMs,\n  // content,\n  popKey\n}: {\n  removeAfterMs: number | null\n  content: PopupContent\n  popKey: string\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined\n\n    const timeout = setTimeout(() => {\n      removeThisPopup()\n    }, removeAfterMs)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [removeAfterMs, removeThisPopup])\n\n  const theme = useContext(ThemeContext)\n\n  let popupContent\n\n  const faderStyle = useSpring({\n    from: { width: '100%' },\n    to: { width: '0%' },\n    config: { duration: removeAfterMs ?? undefined }\n  })\n\n  return (\n    <Popup>\n      <StyledClose color={theme.text2} onClick={removeThisPopup} />\n      {popupContent}\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\n    </Popup>\n  )\n}\n","import styled from 'styled-components/macro'\nimport { useActivePopups } from 'state/application/hooks'\nimport { AutoColumn } from 'components/Layout'\nimport PopupItem from './PopupItem'\n\nconst MobilePopupWrapper = styled.div<{ height: string | number }>`\n  position: relative;\n  max-width: 100%;\n  height: ${({ height }) => height};\n  margin: ${({ height }) => (height ? '0 auto;' : 0)};\n  margin-bottom: ${({ height }) => (height ? '20px' : 0)}};\n\n  display: none;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: block;\n  `};\n`\n\nconst MobilePopupInner = styled.div`\n  height: 99%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  display: flex;\n  flex-direction: row;\n  -webkit-overflow-scrolling: touch;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst FixedPopupColumn = styled(AutoColumn)<{ extraPadding: boolean }>`\n  position: fixed;\n  top: ${({ extraPadding }) => (extraPadding ? '108px' : '88px')};\n  right: 1rem;\n  max-width: 355px !important;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`\n\nexport default function Popups() {\n  // get all popups\n  const activePopups = useActivePopups()\n\n  return (\n    <>\n      <FixedPopupColumn gap=\"20px\" extraPadding>\n        {activePopups.map(item => (\n          <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n        ))}\n      </FixedPopupColumn>\n      <MobilePopupWrapper height={activePopups?.length > 0 ? 'fit-content' : 0}>\n        <MobilePopupInner>\n          {activePopups // reverse so new items up front\n            .slice(0)\n            .reverse()\n            .map(item => (\n              <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n            ))}\n        </MobilePopupInner>\n      </MobilePopupWrapper>\n    </>\n  )\n}\n"],"sourceRoot":""}